// <auto-generated>
/*
 * Ed-Fi Operational Data Store API
 *
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * The version of the OpenAPI document: 3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using EdFi.OdsApi.Sdk.v73.Client;

namespace EdFi.OdsApi.Sdk.v73.Models.All
{
    /// <summary>
    /// EdFiGeneralStudentProgramAssociationProgramParticipationStatus
    /// </summary>
    public partial class EdFiGeneralStudentProgramAssociationProgramParticipationStatus : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EdFiGeneralStudentProgramAssociationProgramParticipationStatus" /> class.
        /// </summary>
        /// <param name="participationStatusDescriptor">The student&#39;s program participation status.</param>
        /// <param name="statusBeginDate">The date the student&#39;s program participation status began.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.</param>
        /// <param name="designatedBy">The person, organization, or department that designated the participation status.</param>
        /// <param name="statusEndDate">The date the student&#39;s program participation status ended.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.</param>
        /// <param name="ext">Extensions to the GeneralStudentProgramAssociationProgramParticipationStatus entity.</param>
        [JsonConstructor]
        public EdFiGeneralStudentProgramAssociationProgramParticipationStatus(string participationStatusDescriptor, DateOnly statusBeginDate, Option<string?> designatedBy = default, Option<DateOnly?> statusEndDate = default, Option<Object?> ext = default)
        {
            ParticipationStatusDescriptor = participationStatusDescriptor;
            StatusBeginDate = statusBeginDate;
            DesignatedByOption = designatedBy;
            StatusEndDateOption = statusEndDate;
            ExtOption = ext;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// The student&#39;s program participation status.
        /// </summary>
        /// <value>The student&#39;s program participation status.</value>
        [JsonPropertyName("participationStatusDescriptor")]
        public string ParticipationStatusDescriptor { get; set; }

        /// <summary>
        /// The date the student&#39;s program participation status began.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.
        /// </summary>
        /// <value>The date the student&#39;s program participation status began.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.</value>
        [JsonPropertyName("statusBeginDate")]
        public DateOnly StatusBeginDate { get; set; }

        /// <summary>
        /// Used to track the state of DesignatedBy
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> DesignatedByOption { get; private set; }

        /// <summary>
        /// The person, organization, or department that designated the participation status.
        /// </summary>
        /// <value>The person, organization, or department that designated the participation status.</value>
        [JsonPropertyName("designatedBy")]
        public string? DesignatedBy { get { return this.DesignatedByOption; } set { this.DesignatedByOption = new(value); } }

        /// <summary>
        /// Used to track the state of StatusEndDate
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<DateOnly?> StatusEndDateOption { get; private set; }

        /// <summary>
        /// The date the student&#39;s program participation status ended.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.
        /// </summary>
        /// <value>The date the student&#39;s program participation status ended.  Note: Date interpretation may vary. Ed-Fi recommends inclusive dates, but states may define dates as inclusive or exclusive. For calculations, align with local guidelines.</value>
        [JsonPropertyName("statusEndDate")]
        public DateOnly? StatusEndDate { get { return this.StatusEndDateOption; } set { this.StatusEndDateOption = new(value); } }

        /// <summary>
        /// Used to track the state of Ext
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<Object?> ExtOption { get; private set; }

        /// <summary>
        /// Extensions to the GeneralStudentProgramAssociationProgramParticipationStatus entity.
        /// </summary>
        /// <value>Extensions to the GeneralStudentProgramAssociationProgramParticipationStatus entity.</value>
        [JsonPropertyName("_ext")]
        public Object? Ext { get { return this.ExtOption; } set { this.ExtOption = new(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EdFiGeneralStudentProgramAssociationProgramParticipationStatus {\n");
            sb.Append("  ParticipationStatusDescriptor: ").Append(ParticipationStatusDescriptor).Append("\n");
            sb.Append("  StatusBeginDate: ").Append(StatusBeginDate).Append("\n");
            sb.Append("  DesignatedBy: ").Append(DesignatedBy).Append("\n");
            sb.Append("  StatusEndDate: ").Append(StatusEndDate).Append("\n");
            sb.Append("  Ext: ").Append(Ext).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // ParticipationStatusDescriptor (string) maxLength
            if (this.ParticipationStatusDescriptor != null && this.ParticipationStatusDescriptor.Length > 306)
            {
                yield return new ValidationResult("Invalid value for ParticipationStatusDescriptor, length must be less than 306.", new [] { "ParticipationStatusDescriptor" });
            }

            // DesignatedBy (string) maxLength
            if (this.DesignatedBy != null && this.DesignatedBy.Length > 60)
            {
                yield return new ValidationResult("Invalid value for DesignatedBy, length must be less than 60.", new [] { "DesignatedBy" });
            }

            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="EdFiGeneralStudentProgramAssociationProgramParticipationStatus" />
    /// </summary>
    public class EdFiGeneralStudentProgramAssociationProgramParticipationStatusJsonConverter : JsonConverter<EdFiGeneralStudentProgramAssociationProgramParticipationStatus>
    {
        /// <summary>
        /// The format to use to serialize StatusBeginDate
        /// </summary>
        public static string StatusBeginDateFormat { get; set; } = "yyyy'-'MM'-'dd";

        /// <summary>
        /// The format to use to serialize StatusEndDate
        /// </summary>
        public static string StatusEndDateFormat { get; set; } = "yyyy'-'MM'-'dd";

        /// <summary>
        /// Deserializes json to <see cref="EdFiGeneralStudentProgramAssociationProgramParticipationStatus" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override EdFiGeneralStudentProgramAssociationProgramParticipationStatus Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<string?> participationStatusDescriptor = default;
            Option<DateOnly?> statusBeginDate = default;
            Option<string?> designatedBy = default;
            Option<DateOnly?> statusEndDate = default;
            Option<Object?> ext = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "participationStatusDescriptor":
                            participationStatusDescriptor = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "statusBeginDate":
                            statusBeginDate = new Option<DateOnly?>(JsonSerializer.Deserialize<DateOnly>(ref utf8JsonReader, jsonSerializerOptions));
                            break;
                        case "designatedBy":
                            designatedBy = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "statusEndDate":
                            statusEndDate = new Option<DateOnly?>(JsonSerializer.Deserialize<DateOnly?>(ref utf8JsonReader, jsonSerializerOptions));
                            break;
                        case "_ext":
                            ext = new Option<Object?>(JsonSerializer.Deserialize<Object>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        default:
                            break;
                    }
                }
            }

            if (!participationStatusDescriptor.IsSet)
                throw new ArgumentException("Property is required for class EdFiGeneralStudentProgramAssociationProgramParticipationStatus.", nameof(participationStatusDescriptor));

            if (!statusBeginDate.IsSet)
                throw new ArgumentException("Property is required for class EdFiGeneralStudentProgramAssociationProgramParticipationStatus.", nameof(statusBeginDate));

            if (participationStatusDescriptor.IsSet && participationStatusDescriptor.Value == null)
                throw new ArgumentNullException(nameof(participationStatusDescriptor), "Property is not nullable for class EdFiGeneralStudentProgramAssociationProgramParticipationStatus.");

            if (statusBeginDate.IsSet && statusBeginDate.Value == null)
                throw new ArgumentNullException(nameof(statusBeginDate), "Property is not nullable for class EdFiGeneralStudentProgramAssociationProgramParticipationStatus.");

            if (ext.IsSet && ext.Value == null)
                throw new ArgumentNullException(nameof(ext), "Property is not nullable for class EdFiGeneralStudentProgramAssociationProgramParticipationStatus.");

            return new EdFiGeneralStudentProgramAssociationProgramParticipationStatus(participationStatusDescriptor.Value!, statusBeginDate.Value!.Value!, designatedBy, statusEndDate, ext);
        }

        /// <summary>
        /// Serializes a <see cref="EdFiGeneralStudentProgramAssociationProgramParticipationStatus" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="edFiGeneralStudentProgramAssociationProgramParticipationStatus"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, EdFiGeneralStudentProgramAssociationProgramParticipationStatus edFiGeneralStudentProgramAssociationProgramParticipationStatus, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, edFiGeneralStudentProgramAssociationProgramParticipationStatus, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="EdFiGeneralStudentProgramAssociationProgramParticipationStatus" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="edFiGeneralStudentProgramAssociationProgramParticipationStatus"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, EdFiGeneralStudentProgramAssociationProgramParticipationStatus edFiGeneralStudentProgramAssociationProgramParticipationStatus, JsonSerializerOptions jsonSerializerOptions)
        {
            if (edFiGeneralStudentProgramAssociationProgramParticipationStatus.ParticipationStatusDescriptor == null)
                throw new ArgumentNullException(nameof(edFiGeneralStudentProgramAssociationProgramParticipationStatus.ParticipationStatusDescriptor), "Property is required for class EdFiGeneralStudentProgramAssociationProgramParticipationStatus.");

            if (edFiGeneralStudentProgramAssociationProgramParticipationStatus.ExtOption.IsSet && edFiGeneralStudentProgramAssociationProgramParticipationStatus.Ext == null)
                throw new ArgumentNullException(nameof(edFiGeneralStudentProgramAssociationProgramParticipationStatus.Ext), "Property is required for class EdFiGeneralStudentProgramAssociationProgramParticipationStatus.");

            writer.WriteString("participationStatusDescriptor", edFiGeneralStudentProgramAssociationProgramParticipationStatus.ParticipationStatusDescriptor);

            writer.WriteString("statusBeginDate", edFiGeneralStudentProgramAssociationProgramParticipationStatus.StatusBeginDate.ToString(StatusBeginDateFormat));

            if (edFiGeneralStudentProgramAssociationProgramParticipationStatus.DesignatedByOption.IsSet)
                if (edFiGeneralStudentProgramAssociationProgramParticipationStatus.DesignatedByOption.Value != null)
                    writer.WriteString("designatedBy", edFiGeneralStudentProgramAssociationProgramParticipationStatus.DesignatedBy);
                else
                    writer.WriteNull("designatedBy");

            if (edFiGeneralStudentProgramAssociationProgramParticipationStatus.StatusEndDateOption.IsSet)
                if (edFiGeneralStudentProgramAssociationProgramParticipationStatus.StatusEndDateOption.Value != null)
                    writer.WriteString("statusEndDate", edFiGeneralStudentProgramAssociationProgramParticipationStatus.StatusEndDateOption.Value!.Value.ToString(StatusEndDateFormat));
                else
                    writer.WriteNull("statusEndDate");

            if (edFiGeneralStudentProgramAssociationProgramParticipationStatus.ExtOption.IsSet)
            {
                writer.WritePropertyName("_ext");
                JsonSerializer.Serialize(writer, edFiGeneralStudentProgramAssociationProgramParticipationStatus.Ext, jsonSerializerOptions);
            }
        }
    }
}
