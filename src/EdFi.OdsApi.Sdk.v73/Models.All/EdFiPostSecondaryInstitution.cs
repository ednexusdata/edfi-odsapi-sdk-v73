// <auto-generated>
/*
 * Ed-Fi Operational Data Store API
 *
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * The version of the OpenAPI document: 3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using EdFi.OdsApi.Sdk.v73.Client;

namespace EdFi.OdsApi.Sdk.v73.Models.All
{
    /// <summary>
    /// EdFiPostSecondaryInstitution
    /// </summary>
    public partial class EdFiPostSecondaryInstitution : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EdFiPostSecondaryInstitution" /> class.
        /// </summary>
        /// <param name="categories">An unordered collection of educationOrganizationCategories. The classification of the education agency within the geographic boundaries of a state according to the level of administrative and operational control granted by the state.</param>
        /// <param name="postSecondaryInstitutionId">The ID of the post secondary institution. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.</param>
        /// <param name="nameOfInstitution">The full, legally accepted name of the institution.</param>
        /// <param name="id">id</param>
        /// <param name="addresses">An unordered collection of educationOrganizationAddresses. The set of elements that describes an address for the education entity, including the street address, city, state, ZIP code, and ZIP code + 4.</param>
        /// <param name="administrativeFundingControlDescriptor">A classification of whether a postsecondary institution is operated by publicly elected or appointed officials (public control) or by privately elected or appointed officials and derives its major source of funds from private sources (private control).</param>
        /// <param name="identificationCodes">An unordered collection of educationOrganizationIdentificationCodes. A unique number or alphanumeric code assigned to an education organization by a school, school system, a state, or other agency or entity.</param>
        /// <param name="indicators">An unordered collection of educationOrganizationIndicators. An indicator or metric of an education organization.</param>
        /// <param name="institutionTelephones">An unordered collection of educationOrganizationInstitutionTelephones. The 10-digit telephone number, including the area code, for the education entity.</param>
        /// <param name="internationalAddresses">An unordered collection of educationOrganizationInternationalAddresses. The set of elements that describes the international physical location of the education entity.</param>
        /// <param name="mediumOfInstructions">An unordered collection of postSecondaryInstitutionMediumOfInstructions. The categories in which an institution serves the students.</param>
        /// <param name="operationalStatusDescriptor">The current operational status of the education organization (e.g., active, inactive).</param>
        /// <param name="postSecondaryInstitutionLevelDescriptor">A classification of whether a post secondary institution&#39;s highest level of offering is a program of 4-years or higher (4 year), 2-but-less-than 4-years (2 year), or less than 2-years.</param>
        /// <param name="shortNameOfInstitution">A short name for the institution.</param>
        /// <param name="webSite">The public web site address (URL) for the education organization.</param>
        /// <param name="etag">A unique system-generated value that identifies the version of the resource.</param>
        /// <param name="lastModifiedDate">The date and time the resource was last modified.</param>
        /// <param name="ext">Extensions to the PostSecondaryInstitution entity.</param>
        [JsonConstructor]
        public EdFiPostSecondaryInstitution(List<EdFiEducationOrganizationCategory> categories, long postSecondaryInstitutionId, string nameOfInstitution, Option<string?> id = default, Option<List<EdFiEducationOrganizationAddress>?> addresses = default, Option<string?> administrativeFundingControlDescriptor = default, Option<List<EdFiEducationOrganizationIdentificationCode>?> identificationCodes = default, Option<List<EdFiEducationOrganizationIndicator>?> indicators = default, Option<List<EdFiEducationOrganizationInstitutionTelephone>?> institutionTelephones = default, Option<List<EdFiEducationOrganizationInternationalAddress>?> internationalAddresses = default, Option<List<EdFiPostSecondaryInstitutionMediumOfInstruction>?> mediumOfInstructions = default, Option<string?> operationalStatusDescriptor = default, Option<string?> postSecondaryInstitutionLevelDescriptor = default, Option<string?> shortNameOfInstitution = default, Option<string?> webSite = default, Option<string?> etag = default, Option<DateTime?> lastModifiedDate = default, Option<Object?> ext = default)
        {
            Categories = categories;
            PostSecondaryInstitutionId = postSecondaryInstitutionId;
            NameOfInstitution = nameOfInstitution;
            IdOption = id;
            AddressesOption = addresses;
            AdministrativeFundingControlDescriptorOption = administrativeFundingControlDescriptor;
            IdentificationCodesOption = identificationCodes;
            IndicatorsOption = indicators;
            InstitutionTelephonesOption = institutionTelephones;
            InternationalAddressesOption = internationalAddresses;
            MediumOfInstructionsOption = mediumOfInstructions;
            OperationalStatusDescriptorOption = operationalStatusDescriptor;
            PostSecondaryInstitutionLevelDescriptorOption = postSecondaryInstitutionLevelDescriptor;
            ShortNameOfInstitutionOption = shortNameOfInstitution;
            WebSiteOption = webSite;
            EtagOption = etag;
            LastModifiedDateOption = lastModifiedDate;
            ExtOption = ext;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// An unordered collection of educationOrganizationCategories. The classification of the education agency within the geographic boundaries of a state according to the level of administrative and operational control granted by the state.
        /// </summary>
        /// <value>An unordered collection of educationOrganizationCategories. The classification of the education agency within the geographic boundaries of a state according to the level of administrative and operational control granted by the state.</value>
        [JsonPropertyName("categories")]
        public List<EdFiEducationOrganizationCategory> Categories { get; set; }

        /// <summary>
        /// The ID of the post secondary institution. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.
        /// </summary>
        /// <value>The ID of the post secondary institution. It must be distinct from any other identifier assigned to educational organizations, such as a LocalEducationAgencyId, to prevent duplication.</value>
        [JsonPropertyName("postSecondaryInstitutionId")]
        public long PostSecondaryInstitutionId { get; set; }

        /// <summary>
        /// The full, legally accepted name of the institution.
        /// </summary>
        /// <value>The full, legally accepted name of the institution.</value>
        [JsonPropertyName("nameOfInstitution")]
        public string NameOfInstitution { get; set; }

        /// <summary>
        /// Used to track the state of Id
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> IdOption { get; private set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [JsonPropertyName("id")]
        public string? Id { get { return this.IdOption; } set { this.IdOption = new(value); } }

        /// <summary>
        /// Used to track the state of Addresses
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<List<EdFiEducationOrganizationAddress>?> AddressesOption { get; private set; }

        /// <summary>
        /// An unordered collection of educationOrganizationAddresses. The set of elements that describes an address for the education entity, including the street address, city, state, ZIP code, and ZIP code + 4.
        /// </summary>
        /// <value>An unordered collection of educationOrganizationAddresses. The set of elements that describes an address for the education entity, including the street address, city, state, ZIP code, and ZIP code + 4.</value>
        [JsonPropertyName("addresses")]
        public List<EdFiEducationOrganizationAddress>? Addresses { get { return this.AddressesOption; } set { this.AddressesOption = new(value); } }

        /// <summary>
        /// Used to track the state of AdministrativeFundingControlDescriptor
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> AdministrativeFundingControlDescriptorOption { get; private set; }

        /// <summary>
        /// A classification of whether a postsecondary institution is operated by publicly elected or appointed officials (public control) or by privately elected or appointed officials and derives its major source of funds from private sources (private control).
        /// </summary>
        /// <value>A classification of whether a postsecondary institution is operated by publicly elected or appointed officials (public control) or by privately elected or appointed officials and derives its major source of funds from private sources (private control).</value>
        [JsonPropertyName("administrativeFundingControlDescriptor")]
        public string? AdministrativeFundingControlDescriptor { get { return this.AdministrativeFundingControlDescriptorOption; } set { this.AdministrativeFundingControlDescriptorOption = new(value); } }

        /// <summary>
        /// Used to track the state of IdentificationCodes
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<List<EdFiEducationOrganizationIdentificationCode>?> IdentificationCodesOption { get; private set; }

        /// <summary>
        /// An unordered collection of educationOrganizationIdentificationCodes. A unique number or alphanumeric code assigned to an education organization by a school, school system, a state, or other agency or entity.
        /// </summary>
        /// <value>An unordered collection of educationOrganizationIdentificationCodes. A unique number or alphanumeric code assigned to an education organization by a school, school system, a state, or other agency or entity.</value>
        [JsonPropertyName("identificationCodes")]
        public List<EdFiEducationOrganizationIdentificationCode>? IdentificationCodes { get { return this.IdentificationCodesOption; } set { this.IdentificationCodesOption = new(value); } }

        /// <summary>
        /// Used to track the state of Indicators
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<List<EdFiEducationOrganizationIndicator>?> IndicatorsOption { get; private set; }

        /// <summary>
        /// An unordered collection of educationOrganizationIndicators. An indicator or metric of an education organization.
        /// </summary>
        /// <value>An unordered collection of educationOrganizationIndicators. An indicator or metric of an education organization.</value>
        [JsonPropertyName("indicators")]
        public List<EdFiEducationOrganizationIndicator>? Indicators { get { return this.IndicatorsOption; } set { this.IndicatorsOption = new(value); } }

        /// <summary>
        /// Used to track the state of InstitutionTelephones
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<List<EdFiEducationOrganizationInstitutionTelephone>?> InstitutionTelephonesOption { get; private set; }

        /// <summary>
        /// An unordered collection of educationOrganizationInstitutionTelephones. The 10-digit telephone number, including the area code, for the education entity.
        /// </summary>
        /// <value>An unordered collection of educationOrganizationInstitutionTelephones. The 10-digit telephone number, including the area code, for the education entity.</value>
        [JsonPropertyName("institutionTelephones")]
        public List<EdFiEducationOrganizationInstitutionTelephone>? InstitutionTelephones { get { return this.InstitutionTelephonesOption; } set { this.InstitutionTelephonesOption = new(value); } }

        /// <summary>
        /// Used to track the state of InternationalAddresses
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<List<EdFiEducationOrganizationInternationalAddress>?> InternationalAddressesOption { get; private set; }

        /// <summary>
        /// An unordered collection of educationOrganizationInternationalAddresses. The set of elements that describes the international physical location of the education entity.
        /// </summary>
        /// <value>An unordered collection of educationOrganizationInternationalAddresses. The set of elements that describes the international physical location of the education entity.</value>
        [JsonPropertyName("internationalAddresses")]
        public List<EdFiEducationOrganizationInternationalAddress>? InternationalAddresses { get { return this.InternationalAddressesOption; } set { this.InternationalAddressesOption = new(value); } }

        /// <summary>
        /// Used to track the state of MediumOfInstructions
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<List<EdFiPostSecondaryInstitutionMediumOfInstruction>?> MediumOfInstructionsOption { get; private set; }

        /// <summary>
        /// An unordered collection of postSecondaryInstitutionMediumOfInstructions. The categories in which an institution serves the students.
        /// </summary>
        /// <value>An unordered collection of postSecondaryInstitutionMediumOfInstructions. The categories in which an institution serves the students.</value>
        [JsonPropertyName("mediumOfInstructions")]
        public List<EdFiPostSecondaryInstitutionMediumOfInstruction>? MediumOfInstructions { get { return this.MediumOfInstructionsOption; } set { this.MediumOfInstructionsOption = new(value); } }

        /// <summary>
        /// Used to track the state of OperationalStatusDescriptor
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> OperationalStatusDescriptorOption { get; private set; }

        /// <summary>
        /// The current operational status of the education organization (e.g., active, inactive).
        /// </summary>
        /// <value>The current operational status of the education organization (e.g., active, inactive).</value>
        [JsonPropertyName("operationalStatusDescriptor")]
        public string? OperationalStatusDescriptor { get { return this.OperationalStatusDescriptorOption; } set { this.OperationalStatusDescriptorOption = new(value); } }

        /// <summary>
        /// Used to track the state of PostSecondaryInstitutionLevelDescriptor
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> PostSecondaryInstitutionLevelDescriptorOption { get; private set; }

        /// <summary>
        /// A classification of whether a post secondary institution&#39;s highest level of offering is a program of 4-years or higher (4 year), 2-but-less-than 4-years (2 year), or less than 2-years.
        /// </summary>
        /// <value>A classification of whether a post secondary institution&#39;s highest level of offering is a program of 4-years or higher (4 year), 2-but-less-than 4-years (2 year), or less than 2-years.</value>
        [JsonPropertyName("postSecondaryInstitutionLevelDescriptor")]
        public string? PostSecondaryInstitutionLevelDescriptor { get { return this.PostSecondaryInstitutionLevelDescriptorOption; } set { this.PostSecondaryInstitutionLevelDescriptorOption = new(value); } }

        /// <summary>
        /// Used to track the state of ShortNameOfInstitution
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> ShortNameOfInstitutionOption { get; private set; }

        /// <summary>
        /// A short name for the institution.
        /// </summary>
        /// <value>A short name for the institution.</value>
        [JsonPropertyName("shortNameOfInstitution")]
        public string? ShortNameOfInstitution { get { return this.ShortNameOfInstitutionOption; } set { this.ShortNameOfInstitutionOption = new(value); } }

        /// <summary>
        /// Used to track the state of WebSite
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> WebSiteOption { get; private set; }

        /// <summary>
        /// The public web site address (URL) for the education organization.
        /// </summary>
        /// <value>The public web site address (URL) for the education organization.</value>
        [JsonPropertyName("webSite")]
        public string? WebSite { get { return this.WebSiteOption; } set { this.WebSiteOption = new(value); } }

        /// <summary>
        /// Used to track the state of Etag
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> EtagOption { get; private set; }

        /// <summary>
        /// A unique system-generated value that identifies the version of the resource.
        /// </summary>
        /// <value>A unique system-generated value that identifies the version of the resource.</value>
        [JsonPropertyName("_etag")]
        public string? Etag { get { return this.EtagOption; } set { this.EtagOption = new(value); } }

        /// <summary>
        /// Used to track the state of LastModifiedDate
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<DateTime?> LastModifiedDateOption { get; private set; }

        /// <summary>
        /// The date and time the resource was last modified.
        /// </summary>
        /// <value>The date and time the resource was last modified.</value>
        [JsonPropertyName("_lastModifiedDate")]
        public DateTime? LastModifiedDate { get { return this.LastModifiedDateOption; } set { this.LastModifiedDateOption = new(value); } }

        /// <summary>
        /// Used to track the state of Ext
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<Object?> ExtOption { get; private set; }

        /// <summary>
        /// Extensions to the PostSecondaryInstitution entity.
        /// </summary>
        /// <value>Extensions to the PostSecondaryInstitution entity.</value>
        [JsonPropertyName("_ext")]
        public Object? Ext { get { return this.ExtOption; } set { this.ExtOption = new(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EdFiPostSecondaryInstitution {\n");
            sb.Append("  Categories: ").Append(Categories).Append("\n");
            sb.Append("  PostSecondaryInstitutionId: ").Append(PostSecondaryInstitutionId).Append("\n");
            sb.Append("  NameOfInstitution: ").Append(NameOfInstitution).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Addresses: ").Append(Addresses).Append("\n");
            sb.Append("  AdministrativeFundingControlDescriptor: ").Append(AdministrativeFundingControlDescriptor).Append("\n");
            sb.Append("  IdentificationCodes: ").Append(IdentificationCodes).Append("\n");
            sb.Append("  Indicators: ").Append(Indicators).Append("\n");
            sb.Append("  InstitutionTelephones: ").Append(InstitutionTelephones).Append("\n");
            sb.Append("  InternationalAddresses: ").Append(InternationalAddresses).Append("\n");
            sb.Append("  MediumOfInstructions: ").Append(MediumOfInstructions).Append("\n");
            sb.Append("  OperationalStatusDescriptor: ").Append(OperationalStatusDescriptor).Append("\n");
            sb.Append("  PostSecondaryInstitutionLevelDescriptor: ").Append(PostSecondaryInstitutionLevelDescriptor).Append("\n");
            sb.Append("  ShortNameOfInstitution: ").Append(ShortNameOfInstitution).Append("\n");
            sb.Append("  WebSite: ").Append(WebSite).Append("\n");
            sb.Append("  Etag: ").Append(Etag).Append("\n");
            sb.Append("  LastModifiedDate: ").Append(LastModifiedDate).Append("\n");
            sb.Append("  Ext: ").Append(Ext).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // NameOfInstitution (string) maxLength
            if (this.NameOfInstitution != null && this.NameOfInstitution.Length > 75)
            {
                yield return new ValidationResult("Invalid value for NameOfInstitution, length must be less than 75.", new [] { "NameOfInstitution" });
            }

            // AdministrativeFundingControlDescriptor (string) maxLength
            if (this.AdministrativeFundingControlDescriptor != null && this.AdministrativeFundingControlDescriptor.Length > 306)
            {
                yield return new ValidationResult("Invalid value for AdministrativeFundingControlDescriptor, length must be less than 306.", new [] { "AdministrativeFundingControlDescriptor" });
            }

            // OperationalStatusDescriptor (string) maxLength
            if (this.OperationalStatusDescriptor != null && this.OperationalStatusDescriptor.Length > 306)
            {
                yield return new ValidationResult("Invalid value for OperationalStatusDescriptor, length must be less than 306.", new [] { "OperationalStatusDescriptor" });
            }

            // PostSecondaryInstitutionLevelDescriptor (string) maxLength
            if (this.PostSecondaryInstitutionLevelDescriptor != null && this.PostSecondaryInstitutionLevelDescriptor.Length > 306)
            {
                yield return new ValidationResult("Invalid value for PostSecondaryInstitutionLevelDescriptor, length must be less than 306.", new [] { "PostSecondaryInstitutionLevelDescriptor" });
            }

            // ShortNameOfInstitution (string) maxLength
            if (this.ShortNameOfInstitution != null && this.ShortNameOfInstitution.Length > 75)
            {
                yield return new ValidationResult("Invalid value for ShortNameOfInstitution, length must be less than 75.", new [] { "ShortNameOfInstitution" });
            }

            // WebSite (string) maxLength
            if (this.WebSite != null && this.WebSite.Length > 255)
            {
                yield return new ValidationResult("Invalid value for WebSite, length must be less than 255.", new [] { "WebSite" });
            }

            // WebSite (string) minLength
            if (this.WebSite != null && this.WebSite.Length < 5)
            {
                yield return new ValidationResult("Invalid value for WebSite, length must be greater than 5.", new [] { "WebSite" });
            }

            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="EdFiPostSecondaryInstitution" />
    /// </summary>
    public class EdFiPostSecondaryInstitutionJsonConverter : JsonConverter<EdFiPostSecondaryInstitution>
    {
        /// <summary>
        /// The format to use to serialize LastModifiedDate
        /// </summary>
        public static string LastModifiedDateFormat { get; set; } = "yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fffffffK";

        /// <summary>
        /// Deserializes json to <see cref="EdFiPostSecondaryInstitution" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override EdFiPostSecondaryInstitution Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<List<EdFiEducationOrganizationCategory>?> categories = default;
            Option<long?> postSecondaryInstitutionId = default;
            Option<string?> nameOfInstitution = default;
            Option<string?> id = default;
            Option<List<EdFiEducationOrganizationAddress>?> addresses = default;
            Option<string?> administrativeFundingControlDescriptor = default;
            Option<List<EdFiEducationOrganizationIdentificationCode>?> identificationCodes = default;
            Option<List<EdFiEducationOrganizationIndicator>?> indicators = default;
            Option<List<EdFiEducationOrganizationInstitutionTelephone>?> institutionTelephones = default;
            Option<List<EdFiEducationOrganizationInternationalAddress>?> internationalAddresses = default;
            Option<List<EdFiPostSecondaryInstitutionMediumOfInstruction>?> mediumOfInstructions = default;
            Option<string?> operationalStatusDescriptor = default;
            Option<string?> postSecondaryInstitutionLevelDescriptor = default;
            Option<string?> shortNameOfInstitution = default;
            Option<string?> webSite = default;
            Option<string?> etag = default;
            Option<DateTime?> lastModifiedDate = default;
            Option<Object?> ext = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "categories":
                            categories = new Option<List<EdFiEducationOrganizationCategory>?>(JsonSerializer.Deserialize<List<EdFiEducationOrganizationCategory>>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "postSecondaryInstitutionId":
                            postSecondaryInstitutionId = new Option<long?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (long?)null : utf8JsonReader.GetInt64());
                            break;
                        case "nameOfInstitution":
                            nameOfInstitution = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "id":
                            id = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "addresses":
                            addresses = new Option<List<EdFiEducationOrganizationAddress>?>(JsonSerializer.Deserialize<List<EdFiEducationOrganizationAddress>>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "administrativeFundingControlDescriptor":
                            administrativeFundingControlDescriptor = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "identificationCodes":
                            identificationCodes = new Option<List<EdFiEducationOrganizationIdentificationCode>?>(JsonSerializer.Deserialize<List<EdFiEducationOrganizationIdentificationCode>>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "indicators":
                            indicators = new Option<List<EdFiEducationOrganizationIndicator>?>(JsonSerializer.Deserialize<List<EdFiEducationOrganizationIndicator>>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "institutionTelephones":
                            institutionTelephones = new Option<List<EdFiEducationOrganizationInstitutionTelephone>?>(JsonSerializer.Deserialize<List<EdFiEducationOrganizationInstitutionTelephone>>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "internationalAddresses":
                            internationalAddresses = new Option<List<EdFiEducationOrganizationInternationalAddress>?>(JsonSerializer.Deserialize<List<EdFiEducationOrganizationInternationalAddress>>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "mediumOfInstructions":
                            mediumOfInstructions = new Option<List<EdFiPostSecondaryInstitutionMediumOfInstruction>?>(JsonSerializer.Deserialize<List<EdFiPostSecondaryInstitutionMediumOfInstruction>>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "operationalStatusDescriptor":
                            operationalStatusDescriptor = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "postSecondaryInstitutionLevelDescriptor":
                            postSecondaryInstitutionLevelDescriptor = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "shortNameOfInstitution":
                            shortNameOfInstitution = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "webSite":
                            webSite = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "_etag":
                            etag = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "_lastModifiedDate":
                            lastModifiedDate = new Option<DateTime?>(JsonSerializer.Deserialize<DateTime>(ref utf8JsonReader, jsonSerializerOptions));
                            break;
                        case "_ext":
                            ext = new Option<Object?>(JsonSerializer.Deserialize<Object>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        default:
                            break;
                    }
                }
            }

            if (!categories.IsSet)
                throw new ArgumentException("Property is required for class EdFiPostSecondaryInstitution.", nameof(categories));

            if (!postSecondaryInstitutionId.IsSet)
                throw new ArgumentException("Property is required for class EdFiPostSecondaryInstitution.", nameof(postSecondaryInstitutionId));

            if (!nameOfInstitution.IsSet)
                throw new ArgumentException("Property is required for class EdFiPostSecondaryInstitution.", nameof(nameOfInstitution));

            if (categories.IsSet && categories.Value == null)
                throw new ArgumentNullException(nameof(categories), "Property is not nullable for class EdFiPostSecondaryInstitution.");

            if (postSecondaryInstitutionId.IsSet && postSecondaryInstitutionId.Value == null)
                throw new ArgumentNullException(nameof(postSecondaryInstitutionId), "Property is not nullable for class EdFiPostSecondaryInstitution.");

            if (nameOfInstitution.IsSet && nameOfInstitution.Value == null)
                throw new ArgumentNullException(nameof(nameOfInstitution), "Property is not nullable for class EdFiPostSecondaryInstitution.");

            if (id.IsSet && id.Value == null)
                throw new ArgumentNullException(nameof(id), "Property is not nullable for class EdFiPostSecondaryInstitution.");

            if (addresses.IsSet && addresses.Value == null)
                throw new ArgumentNullException(nameof(addresses), "Property is not nullable for class EdFiPostSecondaryInstitution.");

            if (identificationCodes.IsSet && identificationCodes.Value == null)
                throw new ArgumentNullException(nameof(identificationCodes), "Property is not nullable for class EdFiPostSecondaryInstitution.");

            if (indicators.IsSet && indicators.Value == null)
                throw new ArgumentNullException(nameof(indicators), "Property is not nullable for class EdFiPostSecondaryInstitution.");

            if (institutionTelephones.IsSet && institutionTelephones.Value == null)
                throw new ArgumentNullException(nameof(institutionTelephones), "Property is not nullable for class EdFiPostSecondaryInstitution.");

            if (internationalAddresses.IsSet && internationalAddresses.Value == null)
                throw new ArgumentNullException(nameof(internationalAddresses), "Property is not nullable for class EdFiPostSecondaryInstitution.");

            if (mediumOfInstructions.IsSet && mediumOfInstructions.Value == null)
                throw new ArgumentNullException(nameof(mediumOfInstructions), "Property is not nullable for class EdFiPostSecondaryInstitution.");

            if (etag.IsSet && etag.Value == null)
                throw new ArgumentNullException(nameof(etag), "Property is not nullable for class EdFiPostSecondaryInstitution.");

            if (lastModifiedDate.IsSet && lastModifiedDate.Value == null)
                throw new ArgumentNullException(nameof(lastModifiedDate), "Property is not nullable for class EdFiPostSecondaryInstitution.");

            if (ext.IsSet && ext.Value == null)
                throw new ArgumentNullException(nameof(ext), "Property is not nullable for class EdFiPostSecondaryInstitution.");

            return new EdFiPostSecondaryInstitution(categories.Value!, postSecondaryInstitutionId.Value!.Value!, nameOfInstitution.Value!, id, addresses, administrativeFundingControlDescriptor, identificationCodes, indicators, institutionTelephones, internationalAddresses, mediumOfInstructions, operationalStatusDescriptor, postSecondaryInstitutionLevelDescriptor, shortNameOfInstitution, webSite, etag, lastModifiedDate, ext);
        }

        /// <summary>
        /// Serializes a <see cref="EdFiPostSecondaryInstitution" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="edFiPostSecondaryInstitution"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, EdFiPostSecondaryInstitution edFiPostSecondaryInstitution, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, edFiPostSecondaryInstitution, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="EdFiPostSecondaryInstitution" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="edFiPostSecondaryInstitution"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, EdFiPostSecondaryInstitution edFiPostSecondaryInstitution, JsonSerializerOptions jsonSerializerOptions)
        {
            if (edFiPostSecondaryInstitution.Categories == null)
                throw new ArgumentNullException(nameof(edFiPostSecondaryInstitution.Categories), "Property is required for class EdFiPostSecondaryInstitution.");

            if (edFiPostSecondaryInstitution.NameOfInstitution == null)
                throw new ArgumentNullException(nameof(edFiPostSecondaryInstitution.NameOfInstitution), "Property is required for class EdFiPostSecondaryInstitution.");

            if (edFiPostSecondaryInstitution.IdOption.IsSet && edFiPostSecondaryInstitution.Id == null)
                throw new ArgumentNullException(nameof(edFiPostSecondaryInstitution.Id), "Property is required for class EdFiPostSecondaryInstitution.");

            if (edFiPostSecondaryInstitution.AddressesOption.IsSet && edFiPostSecondaryInstitution.Addresses == null)
                throw new ArgumentNullException(nameof(edFiPostSecondaryInstitution.Addresses), "Property is required for class EdFiPostSecondaryInstitution.");

            if (edFiPostSecondaryInstitution.IdentificationCodesOption.IsSet && edFiPostSecondaryInstitution.IdentificationCodes == null)
                throw new ArgumentNullException(nameof(edFiPostSecondaryInstitution.IdentificationCodes), "Property is required for class EdFiPostSecondaryInstitution.");

            if (edFiPostSecondaryInstitution.IndicatorsOption.IsSet && edFiPostSecondaryInstitution.Indicators == null)
                throw new ArgumentNullException(nameof(edFiPostSecondaryInstitution.Indicators), "Property is required for class EdFiPostSecondaryInstitution.");

            if (edFiPostSecondaryInstitution.InstitutionTelephonesOption.IsSet && edFiPostSecondaryInstitution.InstitutionTelephones == null)
                throw new ArgumentNullException(nameof(edFiPostSecondaryInstitution.InstitutionTelephones), "Property is required for class EdFiPostSecondaryInstitution.");

            if (edFiPostSecondaryInstitution.InternationalAddressesOption.IsSet && edFiPostSecondaryInstitution.InternationalAddresses == null)
                throw new ArgumentNullException(nameof(edFiPostSecondaryInstitution.InternationalAddresses), "Property is required for class EdFiPostSecondaryInstitution.");

            if (edFiPostSecondaryInstitution.MediumOfInstructionsOption.IsSet && edFiPostSecondaryInstitution.MediumOfInstructions == null)
                throw new ArgumentNullException(nameof(edFiPostSecondaryInstitution.MediumOfInstructions), "Property is required for class EdFiPostSecondaryInstitution.");

            if (edFiPostSecondaryInstitution.EtagOption.IsSet && edFiPostSecondaryInstitution.Etag == null)
                throw new ArgumentNullException(nameof(edFiPostSecondaryInstitution.Etag), "Property is required for class EdFiPostSecondaryInstitution.");

            if (edFiPostSecondaryInstitution.ExtOption.IsSet && edFiPostSecondaryInstitution.Ext == null)
                throw new ArgumentNullException(nameof(edFiPostSecondaryInstitution.Ext), "Property is required for class EdFiPostSecondaryInstitution.");

            writer.WritePropertyName("categories");
            JsonSerializer.Serialize(writer, edFiPostSecondaryInstitution.Categories, jsonSerializerOptions);
            writer.WriteNumber("postSecondaryInstitutionId", edFiPostSecondaryInstitution.PostSecondaryInstitutionId);

            writer.WriteString("nameOfInstitution", edFiPostSecondaryInstitution.NameOfInstitution);

            if (edFiPostSecondaryInstitution.IdOption.IsSet)
                writer.WriteString("id", edFiPostSecondaryInstitution.Id);

            if (edFiPostSecondaryInstitution.AddressesOption.IsSet)
            {
                writer.WritePropertyName("addresses");
                JsonSerializer.Serialize(writer, edFiPostSecondaryInstitution.Addresses, jsonSerializerOptions);
            }
            if (edFiPostSecondaryInstitution.AdministrativeFundingControlDescriptorOption.IsSet)
                if (edFiPostSecondaryInstitution.AdministrativeFundingControlDescriptorOption.Value != null)
                    writer.WriteString("administrativeFundingControlDescriptor", edFiPostSecondaryInstitution.AdministrativeFundingControlDescriptor);
                else
                    writer.WriteNull("administrativeFundingControlDescriptor");

            if (edFiPostSecondaryInstitution.IdentificationCodesOption.IsSet)
            {
                writer.WritePropertyName("identificationCodes");
                JsonSerializer.Serialize(writer, edFiPostSecondaryInstitution.IdentificationCodes, jsonSerializerOptions);
            }
            if (edFiPostSecondaryInstitution.IndicatorsOption.IsSet)
            {
                writer.WritePropertyName("indicators");
                JsonSerializer.Serialize(writer, edFiPostSecondaryInstitution.Indicators, jsonSerializerOptions);
            }
            if (edFiPostSecondaryInstitution.InstitutionTelephonesOption.IsSet)
            {
                writer.WritePropertyName("institutionTelephones");
                JsonSerializer.Serialize(writer, edFiPostSecondaryInstitution.InstitutionTelephones, jsonSerializerOptions);
            }
            if (edFiPostSecondaryInstitution.InternationalAddressesOption.IsSet)
            {
                writer.WritePropertyName("internationalAddresses");
                JsonSerializer.Serialize(writer, edFiPostSecondaryInstitution.InternationalAddresses, jsonSerializerOptions);
            }
            if (edFiPostSecondaryInstitution.MediumOfInstructionsOption.IsSet)
            {
                writer.WritePropertyName("mediumOfInstructions");
                JsonSerializer.Serialize(writer, edFiPostSecondaryInstitution.MediumOfInstructions, jsonSerializerOptions);
            }
            if (edFiPostSecondaryInstitution.OperationalStatusDescriptorOption.IsSet)
                if (edFiPostSecondaryInstitution.OperationalStatusDescriptorOption.Value != null)
                    writer.WriteString("operationalStatusDescriptor", edFiPostSecondaryInstitution.OperationalStatusDescriptor);
                else
                    writer.WriteNull("operationalStatusDescriptor");

            if (edFiPostSecondaryInstitution.PostSecondaryInstitutionLevelDescriptorOption.IsSet)
                if (edFiPostSecondaryInstitution.PostSecondaryInstitutionLevelDescriptorOption.Value != null)
                    writer.WriteString("postSecondaryInstitutionLevelDescriptor", edFiPostSecondaryInstitution.PostSecondaryInstitutionLevelDescriptor);
                else
                    writer.WriteNull("postSecondaryInstitutionLevelDescriptor");

            if (edFiPostSecondaryInstitution.ShortNameOfInstitutionOption.IsSet)
                if (edFiPostSecondaryInstitution.ShortNameOfInstitutionOption.Value != null)
                    writer.WriteString("shortNameOfInstitution", edFiPostSecondaryInstitution.ShortNameOfInstitution);
                else
                    writer.WriteNull("shortNameOfInstitution");

            if (edFiPostSecondaryInstitution.WebSiteOption.IsSet)
                if (edFiPostSecondaryInstitution.WebSiteOption.Value != null)
                    writer.WriteString("webSite", edFiPostSecondaryInstitution.WebSite);
                else
                    writer.WriteNull("webSite");

            if (edFiPostSecondaryInstitution.EtagOption.IsSet)
                writer.WriteString("_etag", edFiPostSecondaryInstitution.Etag);

            if (edFiPostSecondaryInstitution.LastModifiedDateOption.IsSet)
                writer.WriteString("_lastModifiedDate", edFiPostSecondaryInstitution.LastModifiedDateOption.Value!.Value.ToString(LastModifiedDateFormat));

            if (edFiPostSecondaryInstitution.ExtOption.IsSet)
            {
                writer.WritePropertyName("_ext");
                JsonSerializer.Serialize(writer, edFiPostSecondaryInstitution.Ext, jsonSerializerOptions);
            }
        }
    }
}
