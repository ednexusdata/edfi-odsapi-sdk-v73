// <auto-generated>
/*
 * Ed-Fi Operational Data Store API
 *
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * The version of the OpenAPI document: 3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using EdFi.OdsApi.Sdk.v73.Client;

namespace EdFi.OdsApi.Sdk.v73.Models.All
{
    /// <summary>
    /// EdFiStudentEducationOrganizationAssociation
    /// </summary>
    public partial class EdFiStudentEducationOrganizationAssociation : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EdFiStudentEducationOrganizationAssociation" /> class.
        /// </summary>
        /// <param name="educationOrganizationReference">educationOrganizationReference</param>
        /// <param name="studentReference">studentReference</param>
        /// <param name="id">id</param>
        /// <param name="addresses">An unordered collection of studentEducationOrganizationAssociationAddresses. The set of elements that describes an address, including the street address, city, state, and ZIP code.</param>
        /// <param name="ancestryEthnicOrigins">An unordered collection of studentEducationOrganizationAssociationAncestryEthnicOrigins. The original peoples or cultures with which the individual identifies.</param>
        /// <param name="barrierToInternetAccessInResidenceDescriptor">An indication of the barrier to having internet access in the student s primary place of residence.</param>
        /// <param name="cohortYears">An unordered collection of studentEducationOrganizationAssociationCohortYears. The type and year of a cohort (e.g., 9th grade) the student belongs to as determined by the year that student entered a specific grade.</param>
        /// <param name="disabilities">An unordered collection of studentEducationOrganizationAssociationDisabilities. The disability condition(s) that best describes an individual&#39;s impairment, as determined by evaluation(s) conducted by the education organization.</param>
        /// <param name="displacedStudents">An unordered collection of studentEducationOrganizationAssociationDisplacedStudents. Information about student who was enrolled, or eligible for enrollment, but has temporarily or permanently enrolled in another school or district because of a crisis-related disruption in educational services.</param>
        /// <param name="electronicMails">An unordered collection of studentEducationOrganizationAssociationElectronicMails. The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs.</param>
        /// <param name="genderIdentity">The student&#39;s gender as last reported to the education organization.</param>
        /// <param name="hispanicLatinoEthnicity">An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race, as last reported to the education organization. The term, \&quot;Spanish origin,\&quot; can be used in addition to \&quot;Hispanic or Latino.\&quot;</param>
        /// <param name="internationalAddresses">An unordered collection of studentEducationOrganizationAssociationInternationalAddresses. The set of elements that describes an international address.</param>
        /// <param name="internetAccessInResidence">An indication of whether the student is able to access the internet in their primary place of residence.</param>
        /// <param name="internetAccessTypeInResidenceDescriptor">The primary type of internet service used in the student s primary place of residence.</param>
        /// <param name="internetPerformanceInResidenceDescriptor">An indication of whether the student can complete the full range of learning activities, including video streaming and assignment upload, without interruptions caused by poor internet performance in their primary place of residence.</param>
        /// <param name="languages">An unordered collection of studentEducationOrganizationAssociationLanguages. The language(s) the individual uses to communicate. It is strongly recommended that entries use only ISO 639-3 language codes.</param>
        /// <param name="limitedEnglishProficiencyDescriptor">An indication that the student has been identified as limited English proficient by the Language Proficiency Assessment Committee (LPAC), or English proficient.</param>
        /// <param name="loginId">The login ID for the user; used for security access control interface.</param>
        /// <param name="primaryLearningDeviceAccessDescriptor">An indication of whether the primary learning device is shared or not shared with another individual.</param>
        /// <param name="primaryLearningDeviceAwayFromSchoolDescriptor">The type of device the student uses most often to complete learning activities away from school.</param>
        /// <param name="primaryLearningDeviceProviderDescriptor">The provider of the primary learning device.</param>
        /// <param name="profileThumbnail">Locator reference for the student photo. The specification for that reference is left to local definition.</param>
        /// <param name="races">An unordered collection of studentEducationOrganizationAssociationRaces. The general racial category which most clearly reflects the individual&#39;s recognition of his or her community or with which the individual most identifies as last reported to the education organization. The data model allows for multiple entries so that each individual can specify all appropriate races.</param>
        /// <param name="sexDescriptor">The student&#39;s birth sex as reported to the education organization.</param>
        /// <param name="studentCharacteristics">An unordered collection of studentEducationOrganizationAssociationStudentCharacteristics. Reflects important characteristics of a student. If a student has a characteristic present, that characteristic is considered true or active for that student. If a characteristic is not present, no assumption is made as to the applicability of the characteristic, but local policy may dictate otherwise.</param>
        /// <param name="studentIdentificationCodes">An unordered collection of studentEducationOrganizationAssociationStudentIdentificationCodes. A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to a student.</param>
        /// <param name="studentIndicators">An unordered collection of studentEducationOrganizationAssociationStudentIndicators. An indicator or metric computed for the student (e.g., at risk).</param>
        /// <param name="supporterMilitaryConnectionDescriptor">Military connection of the person/people whom the student is a dependent of.</param>
        /// <param name="telephones">An unordered collection of studentEducationOrganizationAssociationTelephones. The 10-digit telephone number, including the area code, for the person.</param>
        /// <param name="tribalAffiliations">An unordered collection of studentEducationOrganizationAssociationTribalAffiliations. An American Indian tribe with which the student is affiliated as last reported to the education organization.</param>
        /// <param name="etag">A unique system-generated value that identifies the version of the resource.</param>
        /// <param name="lastModifiedDate">The date and time the resource was last modified.</param>
        /// <param name="ext">Extensions to the StudentEducationOrganizationAssociation entity.</param>
        [JsonConstructor]
        public EdFiStudentEducationOrganizationAssociation(EdFiEducationOrganizationReference educationOrganizationReference, EdFiStudentReference studentReference, Option<string?> id = default, Option<List<EdFiStudentEducationOrganizationAssociationAddress>?> addresses = default, Option<List<EdFiStudentEducationOrganizationAssociationAncestryEthnicOrigin>?> ancestryEthnicOrigins = default, Option<string?> barrierToInternetAccessInResidenceDescriptor = default, Option<List<EdFiStudentEducationOrganizationAssociationCohortYear>?> cohortYears = default, Option<List<EdFiStudentEducationOrganizationAssociationDisability>?> disabilities = default, Option<List<EdFiStudentEducationOrganizationAssociationDisplacedStudent>?> displacedStudents = default, Option<List<EdFiStudentEducationOrganizationAssociationElectronicMail>?> electronicMails = default, Option<string?> genderIdentity = default, Option<bool?> hispanicLatinoEthnicity = default, Option<List<EdFiStudentEducationOrganizationAssociationInternationalAddress>?> internationalAddresses = default, Option<bool?> internetAccessInResidence = default, Option<string?> internetAccessTypeInResidenceDescriptor = default, Option<string?> internetPerformanceInResidenceDescriptor = default, Option<List<EdFiStudentEducationOrganizationAssociationLanguage>?> languages = default, Option<string?> limitedEnglishProficiencyDescriptor = default, Option<string?> loginId = default, Option<string?> primaryLearningDeviceAccessDescriptor = default, Option<string?> primaryLearningDeviceAwayFromSchoolDescriptor = default, Option<string?> primaryLearningDeviceProviderDescriptor = default, Option<string?> profileThumbnail = default, Option<List<EdFiStudentEducationOrganizationAssociationRace>?> races = default, Option<string?> sexDescriptor = default, Option<List<EdFiStudentEducationOrganizationAssociationStudentCharacteristic>?> studentCharacteristics = default, Option<List<EdFiStudentEducationOrganizationAssociationStudentIdentificationCode>?> studentIdentificationCodes = default, Option<List<EdFiStudentEducationOrganizationAssociationStudentIndicator>?> studentIndicators = default, Option<string?> supporterMilitaryConnectionDescriptor = default, Option<List<EdFiStudentEducationOrganizationAssociationTelephone>?> telephones = default, Option<List<EdFiStudentEducationOrganizationAssociationTribalAffiliation>?> tribalAffiliations = default, Option<string?> etag = default, Option<DateTime?> lastModifiedDate = default, Option<Object?> ext = default)
        {
            EducationOrganizationReference = educationOrganizationReference;
            StudentReference = studentReference;
            IdOption = id;
            AddressesOption = addresses;
            AncestryEthnicOriginsOption = ancestryEthnicOrigins;
            BarrierToInternetAccessInResidenceDescriptorOption = barrierToInternetAccessInResidenceDescriptor;
            CohortYearsOption = cohortYears;
            DisabilitiesOption = disabilities;
            DisplacedStudentsOption = displacedStudents;
            ElectronicMailsOption = electronicMails;
            GenderIdentityOption = genderIdentity;
            HispanicLatinoEthnicityOption = hispanicLatinoEthnicity;
            InternationalAddressesOption = internationalAddresses;
            InternetAccessInResidenceOption = internetAccessInResidence;
            InternetAccessTypeInResidenceDescriptorOption = internetAccessTypeInResidenceDescriptor;
            InternetPerformanceInResidenceDescriptorOption = internetPerformanceInResidenceDescriptor;
            LanguagesOption = languages;
            LimitedEnglishProficiencyDescriptorOption = limitedEnglishProficiencyDescriptor;
            LoginIdOption = loginId;
            PrimaryLearningDeviceAccessDescriptorOption = primaryLearningDeviceAccessDescriptor;
            PrimaryLearningDeviceAwayFromSchoolDescriptorOption = primaryLearningDeviceAwayFromSchoolDescriptor;
            PrimaryLearningDeviceProviderDescriptorOption = primaryLearningDeviceProviderDescriptor;
            ProfileThumbnailOption = profileThumbnail;
            RacesOption = races;
            SexDescriptorOption = sexDescriptor;
            StudentCharacteristicsOption = studentCharacteristics;
            StudentIdentificationCodesOption = studentIdentificationCodes;
            StudentIndicatorsOption = studentIndicators;
            SupporterMilitaryConnectionDescriptorOption = supporterMilitaryConnectionDescriptor;
            TelephonesOption = telephones;
            TribalAffiliationsOption = tribalAffiliations;
            EtagOption = etag;
            LastModifiedDateOption = lastModifiedDate;
            ExtOption = ext;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Gets or Sets EducationOrganizationReference
        /// </summary>
        [JsonPropertyName("educationOrganizationReference")]
        public EdFiEducationOrganizationReference EducationOrganizationReference { get; set; }

        /// <summary>
        /// Gets or Sets StudentReference
        /// </summary>
        [JsonPropertyName("studentReference")]
        public EdFiStudentReference StudentReference { get; set; }

        /// <summary>
        /// Used to track the state of Id
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> IdOption { get; private set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [JsonPropertyName("id")]
        public string? Id { get { return this.IdOption; } set { this.IdOption = new(value); } }

        /// <summary>
        /// Used to track the state of Addresses
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<List<EdFiStudentEducationOrganizationAssociationAddress>?> AddressesOption { get; private set; }

        /// <summary>
        /// An unordered collection of studentEducationOrganizationAssociationAddresses. The set of elements that describes an address, including the street address, city, state, and ZIP code.
        /// </summary>
        /// <value>An unordered collection of studentEducationOrganizationAssociationAddresses. The set of elements that describes an address, including the street address, city, state, and ZIP code.</value>
        [JsonPropertyName("addresses")]
        public List<EdFiStudentEducationOrganizationAssociationAddress>? Addresses { get { return this.AddressesOption; } set { this.AddressesOption = new(value); } }

        /// <summary>
        /// Used to track the state of AncestryEthnicOrigins
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<List<EdFiStudentEducationOrganizationAssociationAncestryEthnicOrigin>?> AncestryEthnicOriginsOption { get; private set; }

        /// <summary>
        /// An unordered collection of studentEducationOrganizationAssociationAncestryEthnicOrigins. The original peoples or cultures with which the individual identifies.
        /// </summary>
        /// <value>An unordered collection of studentEducationOrganizationAssociationAncestryEthnicOrigins. The original peoples or cultures with which the individual identifies.</value>
        [JsonPropertyName("ancestryEthnicOrigins")]
        public List<EdFiStudentEducationOrganizationAssociationAncestryEthnicOrigin>? AncestryEthnicOrigins { get { return this.AncestryEthnicOriginsOption; } set { this.AncestryEthnicOriginsOption = new(value); } }

        /// <summary>
        /// Used to track the state of BarrierToInternetAccessInResidenceDescriptor
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> BarrierToInternetAccessInResidenceDescriptorOption { get; private set; }

        /// <summary>
        /// An indication of the barrier to having internet access in the student s primary place of residence.
        /// </summary>
        /// <value>An indication of the barrier to having internet access in the student s primary place of residence.</value>
        [JsonPropertyName("barrierToInternetAccessInResidenceDescriptor")]
        public string? BarrierToInternetAccessInResidenceDescriptor { get { return this.BarrierToInternetAccessInResidenceDescriptorOption; } set { this.BarrierToInternetAccessInResidenceDescriptorOption = new(value); } }

        /// <summary>
        /// Used to track the state of CohortYears
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<List<EdFiStudentEducationOrganizationAssociationCohortYear>?> CohortYearsOption { get; private set; }

        /// <summary>
        /// An unordered collection of studentEducationOrganizationAssociationCohortYears. The type and year of a cohort (e.g., 9th grade) the student belongs to as determined by the year that student entered a specific grade.
        /// </summary>
        /// <value>An unordered collection of studentEducationOrganizationAssociationCohortYears. The type and year of a cohort (e.g., 9th grade) the student belongs to as determined by the year that student entered a specific grade.</value>
        [JsonPropertyName("cohortYears")]
        public List<EdFiStudentEducationOrganizationAssociationCohortYear>? CohortYears { get { return this.CohortYearsOption; } set { this.CohortYearsOption = new(value); } }

        /// <summary>
        /// Used to track the state of Disabilities
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<List<EdFiStudentEducationOrganizationAssociationDisability>?> DisabilitiesOption { get; private set; }

        /// <summary>
        /// An unordered collection of studentEducationOrganizationAssociationDisabilities. The disability condition(s) that best describes an individual&#39;s impairment, as determined by evaluation(s) conducted by the education organization.
        /// </summary>
        /// <value>An unordered collection of studentEducationOrganizationAssociationDisabilities. The disability condition(s) that best describes an individual&#39;s impairment, as determined by evaluation(s) conducted by the education organization.</value>
        [JsonPropertyName("disabilities")]
        public List<EdFiStudentEducationOrganizationAssociationDisability>? Disabilities { get { return this.DisabilitiesOption; } set { this.DisabilitiesOption = new(value); } }

        /// <summary>
        /// Used to track the state of DisplacedStudents
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<List<EdFiStudentEducationOrganizationAssociationDisplacedStudent>?> DisplacedStudentsOption { get; private set; }

        /// <summary>
        /// An unordered collection of studentEducationOrganizationAssociationDisplacedStudents. Information about student who was enrolled, or eligible for enrollment, but has temporarily or permanently enrolled in another school or district because of a crisis-related disruption in educational services.
        /// </summary>
        /// <value>An unordered collection of studentEducationOrganizationAssociationDisplacedStudents. Information about student who was enrolled, or eligible for enrollment, but has temporarily or permanently enrolled in another school or district because of a crisis-related disruption in educational services.</value>
        [JsonPropertyName("displacedStudents")]
        public List<EdFiStudentEducationOrganizationAssociationDisplacedStudent>? DisplacedStudents { get { return this.DisplacedStudentsOption; } set { this.DisplacedStudentsOption = new(value); } }

        /// <summary>
        /// Used to track the state of ElectronicMails
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<List<EdFiStudentEducationOrganizationAssociationElectronicMail>?> ElectronicMailsOption { get; private set; }

        /// <summary>
        /// An unordered collection of studentEducationOrganizationAssociationElectronicMails. The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs.
        /// </summary>
        /// <value>An unordered collection of studentEducationOrganizationAssociationElectronicMails. The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs.</value>
        [JsonPropertyName("electronicMails")]
        public List<EdFiStudentEducationOrganizationAssociationElectronicMail>? ElectronicMails { get { return this.ElectronicMailsOption; } set { this.ElectronicMailsOption = new(value); } }

        /// <summary>
        /// Used to track the state of GenderIdentity
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> GenderIdentityOption { get; private set; }

        /// <summary>
        /// The student&#39;s gender as last reported to the education organization.
        /// </summary>
        /// <value>The student&#39;s gender as last reported to the education organization.</value>
        [JsonPropertyName("genderIdentity")]
        public string? GenderIdentity { get { return this.GenderIdentityOption; } set { this.GenderIdentityOption = new(value); } }

        /// <summary>
        /// Used to track the state of HispanicLatinoEthnicity
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<bool?> HispanicLatinoEthnicityOption { get; private set; }

        /// <summary>
        /// An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race, as last reported to the education organization. The term, \&quot;Spanish origin,\&quot; can be used in addition to \&quot;Hispanic or Latino.\&quot;
        /// </summary>
        /// <value>An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race, as last reported to the education organization. The term, \&quot;Spanish origin,\&quot; can be used in addition to \&quot;Hispanic or Latino.\&quot;</value>
        [JsonPropertyName("hispanicLatinoEthnicity")]
        public bool? HispanicLatinoEthnicity { get { return this.HispanicLatinoEthnicityOption; } set { this.HispanicLatinoEthnicityOption = new(value); } }

        /// <summary>
        /// Used to track the state of InternationalAddresses
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<List<EdFiStudentEducationOrganizationAssociationInternationalAddress>?> InternationalAddressesOption { get; private set; }

        /// <summary>
        /// An unordered collection of studentEducationOrganizationAssociationInternationalAddresses. The set of elements that describes an international address.
        /// </summary>
        /// <value>An unordered collection of studentEducationOrganizationAssociationInternationalAddresses. The set of elements that describes an international address.</value>
        [JsonPropertyName("internationalAddresses")]
        public List<EdFiStudentEducationOrganizationAssociationInternationalAddress>? InternationalAddresses { get { return this.InternationalAddressesOption; } set { this.InternationalAddressesOption = new(value); } }

        /// <summary>
        /// Used to track the state of InternetAccessInResidence
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<bool?> InternetAccessInResidenceOption { get; private set; }

        /// <summary>
        /// An indication of whether the student is able to access the internet in their primary place of residence.
        /// </summary>
        /// <value>An indication of whether the student is able to access the internet in their primary place of residence.</value>
        [JsonPropertyName("internetAccessInResidence")]
        public bool? InternetAccessInResidence { get { return this.InternetAccessInResidenceOption; } set { this.InternetAccessInResidenceOption = new(value); } }

        /// <summary>
        /// Used to track the state of InternetAccessTypeInResidenceDescriptor
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> InternetAccessTypeInResidenceDescriptorOption { get; private set; }

        /// <summary>
        /// The primary type of internet service used in the student s primary place of residence.
        /// </summary>
        /// <value>The primary type of internet service used in the student s primary place of residence.</value>
        [JsonPropertyName("internetAccessTypeInResidenceDescriptor")]
        public string? InternetAccessTypeInResidenceDescriptor { get { return this.InternetAccessTypeInResidenceDescriptorOption; } set { this.InternetAccessTypeInResidenceDescriptorOption = new(value); } }

        /// <summary>
        /// Used to track the state of InternetPerformanceInResidenceDescriptor
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> InternetPerformanceInResidenceDescriptorOption { get; private set; }

        /// <summary>
        /// An indication of whether the student can complete the full range of learning activities, including video streaming and assignment upload, without interruptions caused by poor internet performance in their primary place of residence.
        /// </summary>
        /// <value>An indication of whether the student can complete the full range of learning activities, including video streaming and assignment upload, without interruptions caused by poor internet performance in their primary place of residence.</value>
        [JsonPropertyName("internetPerformanceInResidenceDescriptor")]
        public string? InternetPerformanceInResidenceDescriptor { get { return this.InternetPerformanceInResidenceDescriptorOption; } set { this.InternetPerformanceInResidenceDescriptorOption = new(value); } }

        /// <summary>
        /// Used to track the state of Languages
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<List<EdFiStudentEducationOrganizationAssociationLanguage>?> LanguagesOption { get; private set; }

        /// <summary>
        /// An unordered collection of studentEducationOrganizationAssociationLanguages. The language(s) the individual uses to communicate. It is strongly recommended that entries use only ISO 639-3 language codes.
        /// </summary>
        /// <value>An unordered collection of studentEducationOrganizationAssociationLanguages. The language(s) the individual uses to communicate. It is strongly recommended that entries use only ISO 639-3 language codes.</value>
        [JsonPropertyName("languages")]
        public List<EdFiStudentEducationOrganizationAssociationLanguage>? Languages { get { return this.LanguagesOption; } set { this.LanguagesOption = new(value); } }

        /// <summary>
        /// Used to track the state of LimitedEnglishProficiencyDescriptor
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> LimitedEnglishProficiencyDescriptorOption { get; private set; }

        /// <summary>
        /// An indication that the student has been identified as limited English proficient by the Language Proficiency Assessment Committee (LPAC), or English proficient.
        /// </summary>
        /// <value>An indication that the student has been identified as limited English proficient by the Language Proficiency Assessment Committee (LPAC), or English proficient.</value>
        [JsonPropertyName("limitedEnglishProficiencyDescriptor")]
        public string? LimitedEnglishProficiencyDescriptor { get { return this.LimitedEnglishProficiencyDescriptorOption; } set { this.LimitedEnglishProficiencyDescriptorOption = new(value); } }

        /// <summary>
        /// Used to track the state of LoginId
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> LoginIdOption { get; private set; }

        /// <summary>
        /// The login ID for the user; used for security access control interface.
        /// </summary>
        /// <value>The login ID for the user; used for security access control interface.</value>
        [JsonPropertyName("loginId")]
        public string? LoginId { get { return this.LoginIdOption; } set { this.LoginIdOption = new(value); } }

        /// <summary>
        /// Used to track the state of PrimaryLearningDeviceAccessDescriptor
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> PrimaryLearningDeviceAccessDescriptorOption { get; private set; }

        /// <summary>
        /// An indication of whether the primary learning device is shared or not shared with another individual.
        /// </summary>
        /// <value>An indication of whether the primary learning device is shared or not shared with another individual.</value>
        [JsonPropertyName("primaryLearningDeviceAccessDescriptor")]
        public string? PrimaryLearningDeviceAccessDescriptor { get { return this.PrimaryLearningDeviceAccessDescriptorOption; } set { this.PrimaryLearningDeviceAccessDescriptorOption = new(value); } }

        /// <summary>
        /// Used to track the state of PrimaryLearningDeviceAwayFromSchoolDescriptor
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> PrimaryLearningDeviceAwayFromSchoolDescriptorOption { get; private set; }

        /// <summary>
        /// The type of device the student uses most often to complete learning activities away from school.
        /// </summary>
        /// <value>The type of device the student uses most often to complete learning activities away from school.</value>
        [JsonPropertyName("primaryLearningDeviceAwayFromSchoolDescriptor")]
        public string? PrimaryLearningDeviceAwayFromSchoolDescriptor { get { return this.PrimaryLearningDeviceAwayFromSchoolDescriptorOption; } set { this.PrimaryLearningDeviceAwayFromSchoolDescriptorOption = new(value); } }

        /// <summary>
        /// Used to track the state of PrimaryLearningDeviceProviderDescriptor
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> PrimaryLearningDeviceProviderDescriptorOption { get; private set; }

        /// <summary>
        /// The provider of the primary learning device.
        /// </summary>
        /// <value>The provider of the primary learning device.</value>
        [JsonPropertyName("primaryLearningDeviceProviderDescriptor")]
        public string? PrimaryLearningDeviceProviderDescriptor { get { return this.PrimaryLearningDeviceProviderDescriptorOption; } set { this.PrimaryLearningDeviceProviderDescriptorOption = new(value); } }

        /// <summary>
        /// Used to track the state of ProfileThumbnail
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> ProfileThumbnailOption { get; private set; }

        /// <summary>
        /// Locator reference for the student photo. The specification for that reference is left to local definition.
        /// </summary>
        /// <value>Locator reference for the student photo. The specification for that reference is left to local definition.</value>
        [JsonPropertyName("profileThumbnail")]
        public string? ProfileThumbnail { get { return this.ProfileThumbnailOption; } set { this.ProfileThumbnailOption = new(value); } }

        /// <summary>
        /// Used to track the state of Races
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<List<EdFiStudentEducationOrganizationAssociationRace>?> RacesOption { get; private set; }

        /// <summary>
        /// An unordered collection of studentEducationOrganizationAssociationRaces. The general racial category which most clearly reflects the individual&#39;s recognition of his or her community or with which the individual most identifies as last reported to the education organization. The data model allows for multiple entries so that each individual can specify all appropriate races.
        /// </summary>
        /// <value>An unordered collection of studentEducationOrganizationAssociationRaces. The general racial category which most clearly reflects the individual&#39;s recognition of his or her community or with which the individual most identifies as last reported to the education organization. The data model allows for multiple entries so that each individual can specify all appropriate races.</value>
        [JsonPropertyName("races")]
        public List<EdFiStudentEducationOrganizationAssociationRace>? Races { get { return this.RacesOption; } set { this.RacesOption = new(value); } }

        /// <summary>
        /// Used to track the state of SexDescriptor
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> SexDescriptorOption { get; private set; }

        /// <summary>
        /// The student&#39;s birth sex as reported to the education organization.
        /// </summary>
        /// <value>The student&#39;s birth sex as reported to the education organization.</value>
        [JsonPropertyName("sexDescriptor")]
        public string? SexDescriptor { get { return this.SexDescriptorOption; } set { this.SexDescriptorOption = new(value); } }

        /// <summary>
        /// Used to track the state of StudentCharacteristics
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<List<EdFiStudentEducationOrganizationAssociationStudentCharacteristic>?> StudentCharacteristicsOption { get; private set; }

        /// <summary>
        /// An unordered collection of studentEducationOrganizationAssociationStudentCharacteristics. Reflects important characteristics of a student. If a student has a characteristic present, that characteristic is considered true or active for that student. If a characteristic is not present, no assumption is made as to the applicability of the characteristic, but local policy may dictate otherwise.
        /// </summary>
        /// <value>An unordered collection of studentEducationOrganizationAssociationStudentCharacteristics. Reflects important characteristics of a student. If a student has a characteristic present, that characteristic is considered true or active for that student. If a characteristic is not present, no assumption is made as to the applicability of the characteristic, but local policy may dictate otherwise.</value>
        [JsonPropertyName("studentCharacteristics")]
        public List<EdFiStudentEducationOrganizationAssociationStudentCharacteristic>? StudentCharacteristics { get { return this.StudentCharacteristicsOption; } set { this.StudentCharacteristicsOption = new(value); } }

        /// <summary>
        /// Used to track the state of StudentIdentificationCodes
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<List<EdFiStudentEducationOrganizationAssociationStudentIdentificationCode>?> StudentIdentificationCodesOption { get; private set; }

        /// <summary>
        /// An unordered collection of studentEducationOrganizationAssociationStudentIdentificationCodes. A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to a student.
        /// </summary>
        /// <value>An unordered collection of studentEducationOrganizationAssociationStudentIdentificationCodes. A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to a student.</value>
        [JsonPropertyName("studentIdentificationCodes")]
        public List<EdFiStudentEducationOrganizationAssociationStudentIdentificationCode>? StudentIdentificationCodes { get { return this.StudentIdentificationCodesOption; } set { this.StudentIdentificationCodesOption = new(value); } }

        /// <summary>
        /// Used to track the state of StudentIndicators
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<List<EdFiStudentEducationOrganizationAssociationStudentIndicator>?> StudentIndicatorsOption { get; private set; }

        /// <summary>
        /// An unordered collection of studentEducationOrganizationAssociationStudentIndicators. An indicator or metric computed for the student (e.g., at risk).
        /// </summary>
        /// <value>An unordered collection of studentEducationOrganizationAssociationStudentIndicators. An indicator or metric computed for the student (e.g., at risk).</value>
        [JsonPropertyName("studentIndicators")]
        public List<EdFiStudentEducationOrganizationAssociationStudentIndicator>? StudentIndicators { get { return this.StudentIndicatorsOption; } set { this.StudentIndicatorsOption = new(value); } }

        /// <summary>
        /// Used to track the state of SupporterMilitaryConnectionDescriptor
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> SupporterMilitaryConnectionDescriptorOption { get; private set; }

        /// <summary>
        /// Military connection of the person/people whom the student is a dependent of.
        /// </summary>
        /// <value>Military connection of the person/people whom the student is a dependent of.</value>
        [JsonPropertyName("supporterMilitaryConnectionDescriptor")]
        public string? SupporterMilitaryConnectionDescriptor { get { return this.SupporterMilitaryConnectionDescriptorOption; } set { this.SupporterMilitaryConnectionDescriptorOption = new(value); } }

        /// <summary>
        /// Used to track the state of Telephones
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<List<EdFiStudentEducationOrganizationAssociationTelephone>?> TelephonesOption { get; private set; }

        /// <summary>
        /// An unordered collection of studentEducationOrganizationAssociationTelephones. The 10-digit telephone number, including the area code, for the person.
        /// </summary>
        /// <value>An unordered collection of studentEducationOrganizationAssociationTelephones. The 10-digit telephone number, including the area code, for the person.</value>
        [JsonPropertyName("telephones")]
        public List<EdFiStudentEducationOrganizationAssociationTelephone>? Telephones { get { return this.TelephonesOption; } set { this.TelephonesOption = new(value); } }

        /// <summary>
        /// Used to track the state of TribalAffiliations
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<List<EdFiStudentEducationOrganizationAssociationTribalAffiliation>?> TribalAffiliationsOption { get; private set; }

        /// <summary>
        /// An unordered collection of studentEducationOrganizationAssociationTribalAffiliations. An American Indian tribe with which the student is affiliated as last reported to the education organization.
        /// </summary>
        /// <value>An unordered collection of studentEducationOrganizationAssociationTribalAffiliations. An American Indian tribe with which the student is affiliated as last reported to the education organization.</value>
        [JsonPropertyName("tribalAffiliations")]
        public List<EdFiStudentEducationOrganizationAssociationTribalAffiliation>? TribalAffiliations { get { return this.TribalAffiliationsOption; } set { this.TribalAffiliationsOption = new(value); } }

        /// <summary>
        /// Used to track the state of Etag
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> EtagOption { get; private set; }

        /// <summary>
        /// A unique system-generated value that identifies the version of the resource.
        /// </summary>
        /// <value>A unique system-generated value that identifies the version of the resource.</value>
        [JsonPropertyName("_etag")]
        public string? Etag { get { return this.EtagOption; } set { this.EtagOption = new(value); } }

        /// <summary>
        /// Used to track the state of LastModifiedDate
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<DateTime?> LastModifiedDateOption { get; private set; }

        /// <summary>
        /// The date and time the resource was last modified.
        /// </summary>
        /// <value>The date and time the resource was last modified.</value>
        [JsonPropertyName("_lastModifiedDate")]
        public DateTime? LastModifiedDate { get { return this.LastModifiedDateOption; } set { this.LastModifiedDateOption = new(value); } }

        /// <summary>
        /// Used to track the state of Ext
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<Object?> ExtOption { get; private set; }

        /// <summary>
        /// Extensions to the StudentEducationOrganizationAssociation entity.
        /// </summary>
        /// <value>Extensions to the StudentEducationOrganizationAssociation entity.</value>
        [JsonPropertyName("_ext")]
        public Object? Ext { get { return this.ExtOption; } set { this.ExtOption = new(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EdFiStudentEducationOrganizationAssociation {\n");
            sb.Append("  EducationOrganizationReference: ").Append(EducationOrganizationReference).Append("\n");
            sb.Append("  StudentReference: ").Append(StudentReference).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Addresses: ").Append(Addresses).Append("\n");
            sb.Append("  AncestryEthnicOrigins: ").Append(AncestryEthnicOrigins).Append("\n");
            sb.Append("  BarrierToInternetAccessInResidenceDescriptor: ").Append(BarrierToInternetAccessInResidenceDescriptor).Append("\n");
            sb.Append("  CohortYears: ").Append(CohortYears).Append("\n");
            sb.Append("  Disabilities: ").Append(Disabilities).Append("\n");
            sb.Append("  DisplacedStudents: ").Append(DisplacedStudents).Append("\n");
            sb.Append("  ElectronicMails: ").Append(ElectronicMails).Append("\n");
            sb.Append("  GenderIdentity: ").Append(GenderIdentity).Append("\n");
            sb.Append("  HispanicLatinoEthnicity: ").Append(HispanicLatinoEthnicity).Append("\n");
            sb.Append("  InternationalAddresses: ").Append(InternationalAddresses).Append("\n");
            sb.Append("  InternetAccessInResidence: ").Append(InternetAccessInResidence).Append("\n");
            sb.Append("  InternetAccessTypeInResidenceDescriptor: ").Append(InternetAccessTypeInResidenceDescriptor).Append("\n");
            sb.Append("  InternetPerformanceInResidenceDescriptor: ").Append(InternetPerformanceInResidenceDescriptor).Append("\n");
            sb.Append("  Languages: ").Append(Languages).Append("\n");
            sb.Append("  LimitedEnglishProficiencyDescriptor: ").Append(LimitedEnglishProficiencyDescriptor).Append("\n");
            sb.Append("  LoginId: ").Append(LoginId).Append("\n");
            sb.Append("  PrimaryLearningDeviceAccessDescriptor: ").Append(PrimaryLearningDeviceAccessDescriptor).Append("\n");
            sb.Append("  PrimaryLearningDeviceAwayFromSchoolDescriptor: ").Append(PrimaryLearningDeviceAwayFromSchoolDescriptor).Append("\n");
            sb.Append("  PrimaryLearningDeviceProviderDescriptor: ").Append(PrimaryLearningDeviceProviderDescriptor).Append("\n");
            sb.Append("  ProfileThumbnail: ").Append(ProfileThumbnail).Append("\n");
            sb.Append("  Races: ").Append(Races).Append("\n");
            sb.Append("  SexDescriptor: ").Append(SexDescriptor).Append("\n");
            sb.Append("  StudentCharacteristics: ").Append(StudentCharacteristics).Append("\n");
            sb.Append("  StudentIdentificationCodes: ").Append(StudentIdentificationCodes).Append("\n");
            sb.Append("  StudentIndicators: ").Append(StudentIndicators).Append("\n");
            sb.Append("  SupporterMilitaryConnectionDescriptor: ").Append(SupporterMilitaryConnectionDescriptor).Append("\n");
            sb.Append("  Telephones: ").Append(Telephones).Append("\n");
            sb.Append("  TribalAffiliations: ").Append(TribalAffiliations).Append("\n");
            sb.Append("  Etag: ").Append(Etag).Append("\n");
            sb.Append("  LastModifiedDate: ").Append(LastModifiedDate).Append("\n");
            sb.Append("  Ext: ").Append(Ext).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // BarrierToInternetAccessInResidenceDescriptor (string) maxLength
            if (this.BarrierToInternetAccessInResidenceDescriptor != null && this.BarrierToInternetAccessInResidenceDescriptor.Length > 306)
            {
                yield return new ValidationResult("Invalid value for BarrierToInternetAccessInResidenceDescriptor, length must be less than 306.", new [] { "BarrierToInternetAccessInResidenceDescriptor" });
            }

            // GenderIdentity (string) maxLength
            if (this.GenderIdentity != null && this.GenderIdentity.Length > 60)
            {
                yield return new ValidationResult("Invalid value for GenderIdentity, length must be less than 60.", new [] { "GenderIdentity" });
            }

            // InternetAccessTypeInResidenceDescriptor (string) maxLength
            if (this.InternetAccessTypeInResidenceDescriptor != null && this.InternetAccessTypeInResidenceDescriptor.Length > 306)
            {
                yield return new ValidationResult("Invalid value for InternetAccessTypeInResidenceDescriptor, length must be less than 306.", new [] { "InternetAccessTypeInResidenceDescriptor" });
            }

            // InternetPerformanceInResidenceDescriptor (string) maxLength
            if (this.InternetPerformanceInResidenceDescriptor != null && this.InternetPerformanceInResidenceDescriptor.Length > 306)
            {
                yield return new ValidationResult("Invalid value for InternetPerformanceInResidenceDescriptor, length must be less than 306.", new [] { "InternetPerformanceInResidenceDescriptor" });
            }

            // LimitedEnglishProficiencyDescriptor (string) maxLength
            if (this.LimitedEnglishProficiencyDescriptor != null && this.LimitedEnglishProficiencyDescriptor.Length > 306)
            {
                yield return new ValidationResult("Invalid value for LimitedEnglishProficiencyDescriptor, length must be less than 306.", new [] { "LimitedEnglishProficiencyDescriptor" });
            }

            // LoginId (string) maxLength
            if (this.LoginId != null && this.LoginId.Length > 60)
            {
                yield return new ValidationResult("Invalid value for LoginId, length must be less than 60.", new [] { "LoginId" });
            }

            // PrimaryLearningDeviceAccessDescriptor (string) maxLength
            if (this.PrimaryLearningDeviceAccessDescriptor != null && this.PrimaryLearningDeviceAccessDescriptor.Length > 306)
            {
                yield return new ValidationResult("Invalid value for PrimaryLearningDeviceAccessDescriptor, length must be less than 306.", new [] { "PrimaryLearningDeviceAccessDescriptor" });
            }

            // PrimaryLearningDeviceAwayFromSchoolDescriptor (string) maxLength
            if (this.PrimaryLearningDeviceAwayFromSchoolDescriptor != null && this.PrimaryLearningDeviceAwayFromSchoolDescriptor.Length > 306)
            {
                yield return new ValidationResult("Invalid value for PrimaryLearningDeviceAwayFromSchoolDescriptor, length must be less than 306.", new [] { "PrimaryLearningDeviceAwayFromSchoolDescriptor" });
            }

            // PrimaryLearningDeviceProviderDescriptor (string) maxLength
            if (this.PrimaryLearningDeviceProviderDescriptor != null && this.PrimaryLearningDeviceProviderDescriptor.Length > 306)
            {
                yield return new ValidationResult("Invalid value for PrimaryLearningDeviceProviderDescriptor, length must be less than 306.", new [] { "PrimaryLearningDeviceProviderDescriptor" });
            }

            // ProfileThumbnail (string) maxLength
            if (this.ProfileThumbnail != null && this.ProfileThumbnail.Length > 255)
            {
                yield return new ValidationResult("Invalid value for ProfileThumbnail, length must be less than 255.", new [] { "ProfileThumbnail" });
            }

            // SexDescriptor (string) maxLength
            if (this.SexDescriptor != null && this.SexDescriptor.Length > 306)
            {
                yield return new ValidationResult("Invalid value for SexDescriptor, length must be less than 306.", new [] { "SexDescriptor" });
            }

            // SupporterMilitaryConnectionDescriptor (string) maxLength
            if (this.SupporterMilitaryConnectionDescriptor != null && this.SupporterMilitaryConnectionDescriptor.Length > 306)
            {
                yield return new ValidationResult("Invalid value for SupporterMilitaryConnectionDescriptor, length must be less than 306.", new [] { "SupporterMilitaryConnectionDescriptor" });
            }

            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="EdFiStudentEducationOrganizationAssociation" />
    /// </summary>
    public class EdFiStudentEducationOrganizationAssociationJsonConverter : JsonConverter<EdFiStudentEducationOrganizationAssociation>
    {
        /// <summary>
        /// The format to use to serialize LastModifiedDate
        /// </summary>
        public static string LastModifiedDateFormat { get; set; } = "yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fffffffK";

        /// <summary>
        /// Deserializes json to <see cref="EdFiStudentEducationOrganizationAssociation" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override EdFiStudentEducationOrganizationAssociation Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<EdFiEducationOrganizationReference?> educationOrganizationReference = default;
            Option<EdFiStudentReference?> studentReference = default;
            Option<string?> id = default;
            Option<List<EdFiStudentEducationOrganizationAssociationAddress>?> addresses = default;
            Option<List<EdFiStudentEducationOrganizationAssociationAncestryEthnicOrigin>?> ancestryEthnicOrigins = default;
            Option<string?> barrierToInternetAccessInResidenceDescriptor = default;
            Option<List<EdFiStudentEducationOrganizationAssociationCohortYear>?> cohortYears = default;
            Option<List<EdFiStudentEducationOrganizationAssociationDisability>?> disabilities = default;
            Option<List<EdFiStudentEducationOrganizationAssociationDisplacedStudent>?> displacedStudents = default;
            Option<List<EdFiStudentEducationOrganizationAssociationElectronicMail>?> electronicMails = default;
            Option<string?> genderIdentity = default;
            Option<bool?> hispanicLatinoEthnicity = default;
            Option<List<EdFiStudentEducationOrganizationAssociationInternationalAddress>?> internationalAddresses = default;
            Option<bool?> internetAccessInResidence = default;
            Option<string?> internetAccessTypeInResidenceDescriptor = default;
            Option<string?> internetPerformanceInResidenceDescriptor = default;
            Option<List<EdFiStudentEducationOrganizationAssociationLanguage>?> languages = default;
            Option<string?> limitedEnglishProficiencyDescriptor = default;
            Option<string?> loginId = default;
            Option<string?> primaryLearningDeviceAccessDescriptor = default;
            Option<string?> primaryLearningDeviceAwayFromSchoolDescriptor = default;
            Option<string?> primaryLearningDeviceProviderDescriptor = default;
            Option<string?> profileThumbnail = default;
            Option<List<EdFiStudentEducationOrganizationAssociationRace>?> races = default;
            Option<string?> sexDescriptor = default;
            Option<List<EdFiStudentEducationOrganizationAssociationStudentCharacteristic>?> studentCharacteristics = default;
            Option<List<EdFiStudentEducationOrganizationAssociationStudentIdentificationCode>?> studentIdentificationCodes = default;
            Option<List<EdFiStudentEducationOrganizationAssociationStudentIndicator>?> studentIndicators = default;
            Option<string?> supporterMilitaryConnectionDescriptor = default;
            Option<List<EdFiStudentEducationOrganizationAssociationTelephone>?> telephones = default;
            Option<List<EdFiStudentEducationOrganizationAssociationTribalAffiliation>?> tribalAffiliations = default;
            Option<string?> etag = default;
            Option<DateTime?> lastModifiedDate = default;
            Option<Object?> ext = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "educationOrganizationReference":
                            educationOrganizationReference = new Option<EdFiEducationOrganizationReference?>(JsonSerializer.Deserialize<EdFiEducationOrganizationReference>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "studentReference":
                            studentReference = new Option<EdFiStudentReference?>(JsonSerializer.Deserialize<EdFiStudentReference>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "id":
                            id = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "addresses":
                            addresses = new Option<List<EdFiStudentEducationOrganizationAssociationAddress>?>(JsonSerializer.Deserialize<List<EdFiStudentEducationOrganizationAssociationAddress>>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "ancestryEthnicOrigins":
                            ancestryEthnicOrigins = new Option<List<EdFiStudentEducationOrganizationAssociationAncestryEthnicOrigin>?>(JsonSerializer.Deserialize<List<EdFiStudentEducationOrganizationAssociationAncestryEthnicOrigin>>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "barrierToInternetAccessInResidenceDescriptor":
                            barrierToInternetAccessInResidenceDescriptor = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "cohortYears":
                            cohortYears = new Option<List<EdFiStudentEducationOrganizationAssociationCohortYear>?>(JsonSerializer.Deserialize<List<EdFiStudentEducationOrganizationAssociationCohortYear>>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "disabilities":
                            disabilities = new Option<List<EdFiStudentEducationOrganizationAssociationDisability>?>(JsonSerializer.Deserialize<List<EdFiStudentEducationOrganizationAssociationDisability>>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "displacedStudents":
                            displacedStudents = new Option<List<EdFiStudentEducationOrganizationAssociationDisplacedStudent>?>(JsonSerializer.Deserialize<List<EdFiStudentEducationOrganizationAssociationDisplacedStudent>>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "electronicMails":
                            electronicMails = new Option<List<EdFiStudentEducationOrganizationAssociationElectronicMail>?>(JsonSerializer.Deserialize<List<EdFiStudentEducationOrganizationAssociationElectronicMail>>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "genderIdentity":
                            genderIdentity = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "hispanicLatinoEthnicity":
                            hispanicLatinoEthnicity = new Option<bool?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (bool?)null : utf8JsonReader.GetBoolean());
                            break;
                        case "internationalAddresses":
                            internationalAddresses = new Option<List<EdFiStudentEducationOrganizationAssociationInternationalAddress>?>(JsonSerializer.Deserialize<List<EdFiStudentEducationOrganizationAssociationInternationalAddress>>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "internetAccessInResidence":
                            internetAccessInResidence = new Option<bool?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (bool?)null : utf8JsonReader.GetBoolean());
                            break;
                        case "internetAccessTypeInResidenceDescriptor":
                            internetAccessTypeInResidenceDescriptor = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "internetPerformanceInResidenceDescriptor":
                            internetPerformanceInResidenceDescriptor = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "languages":
                            languages = new Option<List<EdFiStudentEducationOrganizationAssociationLanguage>?>(JsonSerializer.Deserialize<List<EdFiStudentEducationOrganizationAssociationLanguage>>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "limitedEnglishProficiencyDescriptor":
                            limitedEnglishProficiencyDescriptor = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "loginId":
                            loginId = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "primaryLearningDeviceAccessDescriptor":
                            primaryLearningDeviceAccessDescriptor = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "primaryLearningDeviceAwayFromSchoolDescriptor":
                            primaryLearningDeviceAwayFromSchoolDescriptor = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "primaryLearningDeviceProviderDescriptor":
                            primaryLearningDeviceProviderDescriptor = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "profileThumbnail":
                            profileThumbnail = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "races":
                            races = new Option<List<EdFiStudentEducationOrganizationAssociationRace>?>(JsonSerializer.Deserialize<List<EdFiStudentEducationOrganizationAssociationRace>>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "sexDescriptor":
                            sexDescriptor = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "studentCharacteristics":
                            studentCharacteristics = new Option<List<EdFiStudentEducationOrganizationAssociationStudentCharacteristic>?>(JsonSerializer.Deserialize<List<EdFiStudentEducationOrganizationAssociationStudentCharacteristic>>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "studentIdentificationCodes":
                            studentIdentificationCodes = new Option<List<EdFiStudentEducationOrganizationAssociationStudentIdentificationCode>?>(JsonSerializer.Deserialize<List<EdFiStudentEducationOrganizationAssociationStudentIdentificationCode>>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "studentIndicators":
                            studentIndicators = new Option<List<EdFiStudentEducationOrganizationAssociationStudentIndicator>?>(JsonSerializer.Deserialize<List<EdFiStudentEducationOrganizationAssociationStudentIndicator>>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "supporterMilitaryConnectionDescriptor":
                            supporterMilitaryConnectionDescriptor = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "telephones":
                            telephones = new Option<List<EdFiStudentEducationOrganizationAssociationTelephone>?>(JsonSerializer.Deserialize<List<EdFiStudentEducationOrganizationAssociationTelephone>>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "tribalAffiliations":
                            tribalAffiliations = new Option<List<EdFiStudentEducationOrganizationAssociationTribalAffiliation>?>(JsonSerializer.Deserialize<List<EdFiStudentEducationOrganizationAssociationTribalAffiliation>>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "_etag":
                            etag = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "_lastModifiedDate":
                            lastModifiedDate = new Option<DateTime?>(JsonSerializer.Deserialize<DateTime>(ref utf8JsonReader, jsonSerializerOptions));
                            break;
                        case "_ext":
                            ext = new Option<Object?>(JsonSerializer.Deserialize<Object>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        default:
                            break;
                    }
                }
            }

            if (!educationOrganizationReference.IsSet)
                throw new ArgumentException("Property is required for class EdFiStudentEducationOrganizationAssociation.", nameof(educationOrganizationReference));

            if (!studentReference.IsSet)
                throw new ArgumentException("Property is required for class EdFiStudentEducationOrganizationAssociation.", nameof(studentReference));

            if (educationOrganizationReference.IsSet && educationOrganizationReference.Value == null)
                throw new ArgumentNullException(nameof(educationOrganizationReference), "Property is not nullable for class EdFiStudentEducationOrganizationAssociation.");

            if (studentReference.IsSet && studentReference.Value == null)
                throw new ArgumentNullException(nameof(studentReference), "Property is not nullable for class EdFiStudentEducationOrganizationAssociation.");

            if (id.IsSet && id.Value == null)
                throw new ArgumentNullException(nameof(id), "Property is not nullable for class EdFiStudentEducationOrganizationAssociation.");

            if (addresses.IsSet && addresses.Value == null)
                throw new ArgumentNullException(nameof(addresses), "Property is not nullable for class EdFiStudentEducationOrganizationAssociation.");

            if (ancestryEthnicOrigins.IsSet && ancestryEthnicOrigins.Value == null)
                throw new ArgumentNullException(nameof(ancestryEthnicOrigins), "Property is not nullable for class EdFiStudentEducationOrganizationAssociation.");

            if (cohortYears.IsSet && cohortYears.Value == null)
                throw new ArgumentNullException(nameof(cohortYears), "Property is not nullable for class EdFiStudentEducationOrganizationAssociation.");

            if (disabilities.IsSet && disabilities.Value == null)
                throw new ArgumentNullException(nameof(disabilities), "Property is not nullable for class EdFiStudentEducationOrganizationAssociation.");

            if (displacedStudents.IsSet && displacedStudents.Value == null)
                throw new ArgumentNullException(nameof(displacedStudents), "Property is not nullable for class EdFiStudentEducationOrganizationAssociation.");

            if (electronicMails.IsSet && electronicMails.Value == null)
                throw new ArgumentNullException(nameof(electronicMails), "Property is not nullable for class EdFiStudentEducationOrganizationAssociation.");

            if (internationalAddresses.IsSet && internationalAddresses.Value == null)
                throw new ArgumentNullException(nameof(internationalAddresses), "Property is not nullable for class EdFiStudentEducationOrganizationAssociation.");

            if (languages.IsSet && languages.Value == null)
                throw new ArgumentNullException(nameof(languages), "Property is not nullable for class EdFiStudentEducationOrganizationAssociation.");

            if (races.IsSet && races.Value == null)
                throw new ArgumentNullException(nameof(races), "Property is not nullable for class EdFiStudentEducationOrganizationAssociation.");

            if (studentCharacteristics.IsSet && studentCharacteristics.Value == null)
                throw new ArgumentNullException(nameof(studentCharacteristics), "Property is not nullable for class EdFiStudentEducationOrganizationAssociation.");

            if (studentIdentificationCodes.IsSet && studentIdentificationCodes.Value == null)
                throw new ArgumentNullException(nameof(studentIdentificationCodes), "Property is not nullable for class EdFiStudentEducationOrganizationAssociation.");

            if (studentIndicators.IsSet && studentIndicators.Value == null)
                throw new ArgumentNullException(nameof(studentIndicators), "Property is not nullable for class EdFiStudentEducationOrganizationAssociation.");

            if (telephones.IsSet && telephones.Value == null)
                throw new ArgumentNullException(nameof(telephones), "Property is not nullable for class EdFiStudentEducationOrganizationAssociation.");

            if (tribalAffiliations.IsSet && tribalAffiliations.Value == null)
                throw new ArgumentNullException(nameof(tribalAffiliations), "Property is not nullable for class EdFiStudentEducationOrganizationAssociation.");

            if (etag.IsSet && etag.Value == null)
                throw new ArgumentNullException(nameof(etag), "Property is not nullable for class EdFiStudentEducationOrganizationAssociation.");

            if (lastModifiedDate.IsSet && lastModifiedDate.Value == null)
                throw new ArgumentNullException(nameof(lastModifiedDate), "Property is not nullable for class EdFiStudentEducationOrganizationAssociation.");

            if (ext.IsSet && ext.Value == null)
                throw new ArgumentNullException(nameof(ext), "Property is not nullable for class EdFiStudentEducationOrganizationAssociation.");

            return new EdFiStudentEducationOrganizationAssociation(educationOrganizationReference.Value!, studentReference.Value!, id, addresses, ancestryEthnicOrigins, barrierToInternetAccessInResidenceDescriptor, cohortYears, disabilities, displacedStudents, electronicMails, genderIdentity, hispanicLatinoEthnicity, internationalAddresses, internetAccessInResidence, internetAccessTypeInResidenceDescriptor, internetPerformanceInResidenceDescriptor, languages, limitedEnglishProficiencyDescriptor, loginId, primaryLearningDeviceAccessDescriptor, primaryLearningDeviceAwayFromSchoolDescriptor, primaryLearningDeviceProviderDescriptor, profileThumbnail, races, sexDescriptor, studentCharacteristics, studentIdentificationCodes, studentIndicators, supporterMilitaryConnectionDescriptor, telephones, tribalAffiliations, etag, lastModifiedDate, ext);
        }

        /// <summary>
        /// Serializes a <see cref="EdFiStudentEducationOrganizationAssociation" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="edFiStudentEducationOrganizationAssociation"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, EdFiStudentEducationOrganizationAssociation edFiStudentEducationOrganizationAssociation, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, edFiStudentEducationOrganizationAssociation, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="EdFiStudentEducationOrganizationAssociation" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="edFiStudentEducationOrganizationAssociation"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, EdFiStudentEducationOrganizationAssociation edFiStudentEducationOrganizationAssociation, JsonSerializerOptions jsonSerializerOptions)
        {
            if (edFiStudentEducationOrganizationAssociation.EducationOrganizationReference == null)
                throw new ArgumentNullException(nameof(edFiStudentEducationOrganizationAssociation.EducationOrganizationReference), "Property is required for class EdFiStudentEducationOrganizationAssociation.");

            if (edFiStudentEducationOrganizationAssociation.StudentReference == null)
                throw new ArgumentNullException(nameof(edFiStudentEducationOrganizationAssociation.StudentReference), "Property is required for class EdFiStudentEducationOrganizationAssociation.");

            if (edFiStudentEducationOrganizationAssociation.IdOption.IsSet && edFiStudentEducationOrganizationAssociation.Id == null)
                throw new ArgumentNullException(nameof(edFiStudentEducationOrganizationAssociation.Id), "Property is required for class EdFiStudentEducationOrganizationAssociation.");

            if (edFiStudentEducationOrganizationAssociation.AddressesOption.IsSet && edFiStudentEducationOrganizationAssociation.Addresses == null)
                throw new ArgumentNullException(nameof(edFiStudentEducationOrganizationAssociation.Addresses), "Property is required for class EdFiStudentEducationOrganizationAssociation.");

            if (edFiStudentEducationOrganizationAssociation.AncestryEthnicOriginsOption.IsSet && edFiStudentEducationOrganizationAssociation.AncestryEthnicOrigins == null)
                throw new ArgumentNullException(nameof(edFiStudentEducationOrganizationAssociation.AncestryEthnicOrigins), "Property is required for class EdFiStudentEducationOrganizationAssociation.");

            if (edFiStudentEducationOrganizationAssociation.CohortYearsOption.IsSet && edFiStudentEducationOrganizationAssociation.CohortYears == null)
                throw new ArgumentNullException(nameof(edFiStudentEducationOrganizationAssociation.CohortYears), "Property is required for class EdFiStudentEducationOrganizationAssociation.");

            if (edFiStudentEducationOrganizationAssociation.DisabilitiesOption.IsSet && edFiStudentEducationOrganizationAssociation.Disabilities == null)
                throw new ArgumentNullException(nameof(edFiStudentEducationOrganizationAssociation.Disabilities), "Property is required for class EdFiStudentEducationOrganizationAssociation.");

            if (edFiStudentEducationOrganizationAssociation.DisplacedStudentsOption.IsSet && edFiStudentEducationOrganizationAssociation.DisplacedStudents == null)
                throw new ArgumentNullException(nameof(edFiStudentEducationOrganizationAssociation.DisplacedStudents), "Property is required for class EdFiStudentEducationOrganizationAssociation.");

            if (edFiStudentEducationOrganizationAssociation.ElectronicMailsOption.IsSet && edFiStudentEducationOrganizationAssociation.ElectronicMails == null)
                throw new ArgumentNullException(nameof(edFiStudentEducationOrganizationAssociation.ElectronicMails), "Property is required for class EdFiStudentEducationOrganizationAssociation.");

            if (edFiStudentEducationOrganizationAssociation.InternationalAddressesOption.IsSet && edFiStudentEducationOrganizationAssociation.InternationalAddresses == null)
                throw new ArgumentNullException(nameof(edFiStudentEducationOrganizationAssociation.InternationalAddresses), "Property is required for class EdFiStudentEducationOrganizationAssociation.");

            if (edFiStudentEducationOrganizationAssociation.LanguagesOption.IsSet && edFiStudentEducationOrganizationAssociation.Languages == null)
                throw new ArgumentNullException(nameof(edFiStudentEducationOrganizationAssociation.Languages), "Property is required for class EdFiStudentEducationOrganizationAssociation.");

            if (edFiStudentEducationOrganizationAssociation.RacesOption.IsSet && edFiStudentEducationOrganizationAssociation.Races == null)
                throw new ArgumentNullException(nameof(edFiStudentEducationOrganizationAssociation.Races), "Property is required for class EdFiStudentEducationOrganizationAssociation.");

            if (edFiStudentEducationOrganizationAssociation.StudentCharacteristicsOption.IsSet && edFiStudentEducationOrganizationAssociation.StudentCharacteristics == null)
                throw new ArgumentNullException(nameof(edFiStudentEducationOrganizationAssociation.StudentCharacteristics), "Property is required for class EdFiStudentEducationOrganizationAssociation.");

            if (edFiStudentEducationOrganizationAssociation.StudentIdentificationCodesOption.IsSet && edFiStudentEducationOrganizationAssociation.StudentIdentificationCodes == null)
                throw new ArgumentNullException(nameof(edFiStudentEducationOrganizationAssociation.StudentIdentificationCodes), "Property is required for class EdFiStudentEducationOrganizationAssociation.");

            if (edFiStudentEducationOrganizationAssociation.StudentIndicatorsOption.IsSet && edFiStudentEducationOrganizationAssociation.StudentIndicators == null)
                throw new ArgumentNullException(nameof(edFiStudentEducationOrganizationAssociation.StudentIndicators), "Property is required for class EdFiStudentEducationOrganizationAssociation.");

            if (edFiStudentEducationOrganizationAssociation.TelephonesOption.IsSet && edFiStudentEducationOrganizationAssociation.Telephones == null)
                throw new ArgumentNullException(nameof(edFiStudentEducationOrganizationAssociation.Telephones), "Property is required for class EdFiStudentEducationOrganizationAssociation.");

            if (edFiStudentEducationOrganizationAssociation.TribalAffiliationsOption.IsSet && edFiStudentEducationOrganizationAssociation.TribalAffiliations == null)
                throw new ArgumentNullException(nameof(edFiStudentEducationOrganizationAssociation.TribalAffiliations), "Property is required for class EdFiStudentEducationOrganizationAssociation.");

            if (edFiStudentEducationOrganizationAssociation.EtagOption.IsSet && edFiStudentEducationOrganizationAssociation.Etag == null)
                throw new ArgumentNullException(nameof(edFiStudentEducationOrganizationAssociation.Etag), "Property is required for class EdFiStudentEducationOrganizationAssociation.");

            if (edFiStudentEducationOrganizationAssociation.ExtOption.IsSet && edFiStudentEducationOrganizationAssociation.Ext == null)
                throw new ArgumentNullException(nameof(edFiStudentEducationOrganizationAssociation.Ext), "Property is required for class EdFiStudentEducationOrganizationAssociation.");

            writer.WritePropertyName("educationOrganizationReference");
            JsonSerializer.Serialize(writer, edFiStudentEducationOrganizationAssociation.EducationOrganizationReference, jsonSerializerOptions);
            writer.WritePropertyName("studentReference");
            JsonSerializer.Serialize(writer, edFiStudentEducationOrganizationAssociation.StudentReference, jsonSerializerOptions);
            if (edFiStudentEducationOrganizationAssociation.IdOption.IsSet)
                writer.WriteString("id", edFiStudentEducationOrganizationAssociation.Id);

            if (edFiStudentEducationOrganizationAssociation.AddressesOption.IsSet)
            {
                writer.WritePropertyName("addresses");
                JsonSerializer.Serialize(writer, edFiStudentEducationOrganizationAssociation.Addresses, jsonSerializerOptions);
            }
            if (edFiStudentEducationOrganizationAssociation.AncestryEthnicOriginsOption.IsSet)
            {
                writer.WritePropertyName("ancestryEthnicOrigins");
                JsonSerializer.Serialize(writer, edFiStudentEducationOrganizationAssociation.AncestryEthnicOrigins, jsonSerializerOptions);
            }
            if (edFiStudentEducationOrganizationAssociation.BarrierToInternetAccessInResidenceDescriptorOption.IsSet)
                if (edFiStudentEducationOrganizationAssociation.BarrierToInternetAccessInResidenceDescriptorOption.Value != null)
                    writer.WriteString("barrierToInternetAccessInResidenceDescriptor", edFiStudentEducationOrganizationAssociation.BarrierToInternetAccessInResidenceDescriptor);
                else
                    writer.WriteNull("barrierToInternetAccessInResidenceDescriptor");

            if (edFiStudentEducationOrganizationAssociation.CohortYearsOption.IsSet)
            {
                writer.WritePropertyName("cohortYears");
                JsonSerializer.Serialize(writer, edFiStudentEducationOrganizationAssociation.CohortYears, jsonSerializerOptions);
            }
            if (edFiStudentEducationOrganizationAssociation.DisabilitiesOption.IsSet)
            {
                writer.WritePropertyName("disabilities");
                JsonSerializer.Serialize(writer, edFiStudentEducationOrganizationAssociation.Disabilities, jsonSerializerOptions);
            }
            if (edFiStudentEducationOrganizationAssociation.DisplacedStudentsOption.IsSet)
            {
                writer.WritePropertyName("displacedStudents");
                JsonSerializer.Serialize(writer, edFiStudentEducationOrganizationAssociation.DisplacedStudents, jsonSerializerOptions);
            }
            if (edFiStudentEducationOrganizationAssociation.ElectronicMailsOption.IsSet)
            {
                writer.WritePropertyName("electronicMails");
                JsonSerializer.Serialize(writer, edFiStudentEducationOrganizationAssociation.ElectronicMails, jsonSerializerOptions);
            }
            if (edFiStudentEducationOrganizationAssociation.GenderIdentityOption.IsSet)
                if (edFiStudentEducationOrganizationAssociation.GenderIdentityOption.Value != null)
                    writer.WriteString("genderIdentity", edFiStudentEducationOrganizationAssociation.GenderIdentity);
                else
                    writer.WriteNull("genderIdentity");

            if (edFiStudentEducationOrganizationAssociation.HispanicLatinoEthnicityOption.IsSet)
                if (edFiStudentEducationOrganizationAssociation.HispanicLatinoEthnicityOption.Value != null)
                    writer.WriteBoolean("hispanicLatinoEthnicity", edFiStudentEducationOrganizationAssociation.HispanicLatinoEthnicityOption.Value!.Value);
                else
                    writer.WriteNull("hispanicLatinoEthnicity");

            if (edFiStudentEducationOrganizationAssociation.InternationalAddressesOption.IsSet)
            {
                writer.WritePropertyName("internationalAddresses");
                JsonSerializer.Serialize(writer, edFiStudentEducationOrganizationAssociation.InternationalAddresses, jsonSerializerOptions);
            }
            if (edFiStudentEducationOrganizationAssociation.InternetAccessInResidenceOption.IsSet)
                if (edFiStudentEducationOrganizationAssociation.InternetAccessInResidenceOption.Value != null)
                    writer.WriteBoolean("internetAccessInResidence", edFiStudentEducationOrganizationAssociation.InternetAccessInResidenceOption.Value!.Value);
                else
                    writer.WriteNull("internetAccessInResidence");

            if (edFiStudentEducationOrganizationAssociation.InternetAccessTypeInResidenceDescriptorOption.IsSet)
                if (edFiStudentEducationOrganizationAssociation.InternetAccessTypeInResidenceDescriptorOption.Value != null)
                    writer.WriteString("internetAccessTypeInResidenceDescriptor", edFiStudentEducationOrganizationAssociation.InternetAccessTypeInResidenceDescriptor);
                else
                    writer.WriteNull("internetAccessTypeInResidenceDescriptor");

            if (edFiStudentEducationOrganizationAssociation.InternetPerformanceInResidenceDescriptorOption.IsSet)
                if (edFiStudentEducationOrganizationAssociation.InternetPerformanceInResidenceDescriptorOption.Value != null)
                    writer.WriteString("internetPerformanceInResidenceDescriptor", edFiStudentEducationOrganizationAssociation.InternetPerformanceInResidenceDescriptor);
                else
                    writer.WriteNull("internetPerformanceInResidenceDescriptor");

            if (edFiStudentEducationOrganizationAssociation.LanguagesOption.IsSet)
            {
                writer.WritePropertyName("languages");
                JsonSerializer.Serialize(writer, edFiStudentEducationOrganizationAssociation.Languages, jsonSerializerOptions);
            }
            if (edFiStudentEducationOrganizationAssociation.LimitedEnglishProficiencyDescriptorOption.IsSet)
                if (edFiStudentEducationOrganizationAssociation.LimitedEnglishProficiencyDescriptorOption.Value != null)
                    writer.WriteString("limitedEnglishProficiencyDescriptor", edFiStudentEducationOrganizationAssociation.LimitedEnglishProficiencyDescriptor);
                else
                    writer.WriteNull("limitedEnglishProficiencyDescriptor");

            if (edFiStudentEducationOrganizationAssociation.LoginIdOption.IsSet)
                if (edFiStudentEducationOrganizationAssociation.LoginIdOption.Value != null)
                    writer.WriteString("loginId", edFiStudentEducationOrganizationAssociation.LoginId);
                else
                    writer.WriteNull("loginId");

            if (edFiStudentEducationOrganizationAssociation.PrimaryLearningDeviceAccessDescriptorOption.IsSet)
                if (edFiStudentEducationOrganizationAssociation.PrimaryLearningDeviceAccessDescriptorOption.Value != null)
                    writer.WriteString("primaryLearningDeviceAccessDescriptor", edFiStudentEducationOrganizationAssociation.PrimaryLearningDeviceAccessDescriptor);
                else
                    writer.WriteNull("primaryLearningDeviceAccessDescriptor");

            if (edFiStudentEducationOrganizationAssociation.PrimaryLearningDeviceAwayFromSchoolDescriptorOption.IsSet)
                if (edFiStudentEducationOrganizationAssociation.PrimaryLearningDeviceAwayFromSchoolDescriptorOption.Value != null)
                    writer.WriteString("primaryLearningDeviceAwayFromSchoolDescriptor", edFiStudentEducationOrganizationAssociation.PrimaryLearningDeviceAwayFromSchoolDescriptor);
                else
                    writer.WriteNull("primaryLearningDeviceAwayFromSchoolDescriptor");

            if (edFiStudentEducationOrganizationAssociation.PrimaryLearningDeviceProviderDescriptorOption.IsSet)
                if (edFiStudentEducationOrganizationAssociation.PrimaryLearningDeviceProviderDescriptorOption.Value != null)
                    writer.WriteString("primaryLearningDeviceProviderDescriptor", edFiStudentEducationOrganizationAssociation.PrimaryLearningDeviceProviderDescriptor);
                else
                    writer.WriteNull("primaryLearningDeviceProviderDescriptor");

            if (edFiStudentEducationOrganizationAssociation.ProfileThumbnailOption.IsSet)
                if (edFiStudentEducationOrganizationAssociation.ProfileThumbnailOption.Value != null)
                    writer.WriteString("profileThumbnail", edFiStudentEducationOrganizationAssociation.ProfileThumbnail);
                else
                    writer.WriteNull("profileThumbnail");

            if (edFiStudentEducationOrganizationAssociation.RacesOption.IsSet)
            {
                writer.WritePropertyName("races");
                JsonSerializer.Serialize(writer, edFiStudentEducationOrganizationAssociation.Races, jsonSerializerOptions);
            }
            if (edFiStudentEducationOrganizationAssociation.SexDescriptorOption.IsSet)
                if (edFiStudentEducationOrganizationAssociation.SexDescriptorOption.Value != null)
                    writer.WriteString("sexDescriptor", edFiStudentEducationOrganizationAssociation.SexDescriptor);
                else
                    writer.WriteNull("sexDescriptor");

            if (edFiStudentEducationOrganizationAssociation.StudentCharacteristicsOption.IsSet)
            {
                writer.WritePropertyName("studentCharacteristics");
                JsonSerializer.Serialize(writer, edFiStudentEducationOrganizationAssociation.StudentCharacteristics, jsonSerializerOptions);
            }
            if (edFiStudentEducationOrganizationAssociation.StudentIdentificationCodesOption.IsSet)
            {
                writer.WritePropertyName("studentIdentificationCodes");
                JsonSerializer.Serialize(writer, edFiStudentEducationOrganizationAssociation.StudentIdentificationCodes, jsonSerializerOptions);
            }
            if (edFiStudentEducationOrganizationAssociation.StudentIndicatorsOption.IsSet)
            {
                writer.WritePropertyName("studentIndicators");
                JsonSerializer.Serialize(writer, edFiStudentEducationOrganizationAssociation.StudentIndicators, jsonSerializerOptions);
            }
            if (edFiStudentEducationOrganizationAssociation.SupporterMilitaryConnectionDescriptorOption.IsSet)
                if (edFiStudentEducationOrganizationAssociation.SupporterMilitaryConnectionDescriptorOption.Value != null)
                    writer.WriteString("supporterMilitaryConnectionDescriptor", edFiStudentEducationOrganizationAssociation.SupporterMilitaryConnectionDescriptor);
                else
                    writer.WriteNull("supporterMilitaryConnectionDescriptor");

            if (edFiStudentEducationOrganizationAssociation.TelephonesOption.IsSet)
            {
                writer.WritePropertyName("telephones");
                JsonSerializer.Serialize(writer, edFiStudentEducationOrganizationAssociation.Telephones, jsonSerializerOptions);
            }
            if (edFiStudentEducationOrganizationAssociation.TribalAffiliationsOption.IsSet)
            {
                writer.WritePropertyName("tribalAffiliations");
                JsonSerializer.Serialize(writer, edFiStudentEducationOrganizationAssociation.TribalAffiliations, jsonSerializerOptions);
            }
            if (edFiStudentEducationOrganizationAssociation.EtagOption.IsSet)
                writer.WriteString("_etag", edFiStudentEducationOrganizationAssociation.Etag);

            if (edFiStudentEducationOrganizationAssociation.LastModifiedDateOption.IsSet)
                writer.WriteString("_lastModifiedDate", edFiStudentEducationOrganizationAssociation.LastModifiedDateOption.Value!.Value.ToString(LastModifiedDateFormat));

            if (edFiStudentEducationOrganizationAssociation.ExtOption.IsSet)
            {
                writer.WritePropertyName("_ext");
                JsonSerializer.Serialize(writer, edFiStudentEducationOrganizationAssociation.Ext, jsonSerializerOptions);
            }
        }
    }
}
