// <auto-generated>
/*
 * Ed-Fi Operational Data Store API
 *
 * The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface.  ***  > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.*  *** 
 *
 * The version of the OpenAPI document: 3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using EdFi.OdsApi.Sdk.v73.Client;

namespace EdFi.OdsApi.Sdk.v73.Models.All
{
    /// <summary>
    /// TrackedChangesEdFiGradebookEntryKey
    /// </summary>
    public partial class TrackedChangesEdFiGradebookEntryKey : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TrackedChangesEdFiGradebookEntryKey" /> class.
        /// </summary>
        /// <param name="gradebookEntryIdentifier">A unique number or alphanumeric code assigned to a gradebook entry by the source system.</param>
        /// <param name="namespace">Namespace URI for the source of the gradebook entry.</param>
        [JsonConstructor]
        public TrackedChangesEdFiGradebookEntryKey(Option<string?> gradebookEntryIdentifier = default, Option<string?> @namespace = default)
        {
            GradebookEntryIdentifierOption = gradebookEntryIdentifier;
            NamespaceOption = @namespace;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Used to track the state of GradebookEntryIdentifier
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> GradebookEntryIdentifierOption { get; private set; }

        /// <summary>
        /// A unique number or alphanumeric code assigned to a gradebook entry by the source system.
        /// </summary>
        /// <value>A unique number or alphanumeric code assigned to a gradebook entry by the source system.</value>
        [JsonPropertyName("gradebookEntryIdentifier")]
        public string? GradebookEntryIdentifier { get { return this.GradebookEntryIdentifierOption; } set { this.GradebookEntryIdentifierOption = new(value); } }

        /// <summary>
        /// Used to track the state of Namespace
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> NamespaceOption { get; private set; }

        /// <summary>
        /// Namespace URI for the source of the gradebook entry.
        /// </summary>
        /// <value>Namespace URI for the source of the gradebook entry.</value>
        [JsonPropertyName("namespace")]
        public string? Namespace { get { return this.NamespaceOption; } set { this.NamespaceOption = new(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class TrackedChangesEdFiGradebookEntryKey {\n");
            sb.Append("  GradebookEntryIdentifier: ").Append(GradebookEntryIdentifier).Append("\n");
            sb.Append("  Namespace: ").Append(Namespace).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // GradebookEntryIdentifier (string) maxLength
            if (this.GradebookEntryIdentifier != null && this.GradebookEntryIdentifier.Length > 60)
            {
                yield return new ValidationResult("Invalid value for GradebookEntryIdentifier, length must be less than 60.", new [] { "GradebookEntryIdentifier" });
            }

            // Namespace (string) maxLength
            if (this.Namespace != null && this.Namespace.Length > 255)
            {
                yield return new ValidationResult("Invalid value for Namespace, length must be less than 255.", new [] { "Namespace" });
            }

            // Namespace (string) minLength
            if (this.Namespace != null && this.Namespace.Length < 5)
            {
                yield return new ValidationResult("Invalid value for Namespace, length must be greater than 5.", new [] { "Namespace" });
            }

            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="TrackedChangesEdFiGradebookEntryKey" />
    /// </summary>
    public class TrackedChangesEdFiGradebookEntryKeyJsonConverter : JsonConverter<TrackedChangesEdFiGradebookEntryKey>
    {
        /// <summary>
        /// Deserializes json to <see cref="TrackedChangesEdFiGradebookEntryKey" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override TrackedChangesEdFiGradebookEntryKey Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<string?> gradebookEntryIdentifier = default;
            Option<string?> varNamespace = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "gradebookEntryIdentifier":
                            gradebookEntryIdentifier = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "namespace":
                            varNamespace = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        default:
                            break;
                    }
                }
            }

            if (gradebookEntryIdentifier.IsSet && gradebookEntryIdentifier.Value == null)
                throw new ArgumentNullException(nameof(gradebookEntryIdentifier), "Property is not nullable for class TrackedChangesEdFiGradebookEntryKey.");

            if (varNamespace.IsSet && varNamespace.Value == null)
                throw new ArgumentNullException(nameof(varNamespace), "Property is not nullable for class TrackedChangesEdFiGradebookEntryKey.");

            return new TrackedChangesEdFiGradebookEntryKey(gradebookEntryIdentifier, varNamespace);
        }

        /// <summary>
        /// Serializes a <see cref="TrackedChangesEdFiGradebookEntryKey" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="trackedChangesEdFiGradebookEntryKey"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, TrackedChangesEdFiGradebookEntryKey trackedChangesEdFiGradebookEntryKey, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, trackedChangesEdFiGradebookEntryKey, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="TrackedChangesEdFiGradebookEntryKey" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="trackedChangesEdFiGradebookEntryKey"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, TrackedChangesEdFiGradebookEntryKey trackedChangesEdFiGradebookEntryKey, JsonSerializerOptions jsonSerializerOptions)
        {
            if (trackedChangesEdFiGradebookEntryKey.GradebookEntryIdentifierOption.IsSet && trackedChangesEdFiGradebookEntryKey.GradebookEntryIdentifier == null)
                throw new ArgumentNullException(nameof(trackedChangesEdFiGradebookEntryKey.GradebookEntryIdentifier), "Property is required for class TrackedChangesEdFiGradebookEntryKey.");

            if (trackedChangesEdFiGradebookEntryKey.NamespaceOption.IsSet && trackedChangesEdFiGradebookEntryKey.Namespace == null)
                throw new ArgumentNullException(nameof(trackedChangesEdFiGradebookEntryKey.Namespace), "Property is required for class TrackedChangesEdFiGradebookEntryKey.");

            if (trackedChangesEdFiGradebookEntryKey.GradebookEntryIdentifierOption.IsSet)
                writer.WriteString("gradebookEntryIdentifier", trackedChangesEdFiGradebookEntryKey.GradebookEntryIdentifier);

            if (trackedChangesEdFiGradebookEntryKey.NamespaceOption.IsSet)
                writer.WriteString("namespace", trackedChangesEdFiGradebookEntryKey.Namespace);
        }
    }
}
